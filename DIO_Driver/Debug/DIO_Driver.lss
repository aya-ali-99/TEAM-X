
DIO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000604  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000604  00000678  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000894  00000000  00000000  00000680  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000a88  00000000  00000000  00000f14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e0       	ldi	r30, 0x04	; 4
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 9c 02 	call	0x538	; 0x538 <main>
  7a:	0c 94 00 03 	jmp	0x600	; 0x600 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Dio_SetPortDirection>:
#include "DIO_interface.h"



Std_type Dio_SetPortDirection(S_DioSetPortDirection *Dio_ConfigPort)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <Dio_SetPortDirection+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <Dio_SetPortDirection+0x8>
  8a:	0f 92       	push	r0
  8c:	cd b7       	in	r28, 0x3d	; 61
  8e:	de b7       	in	r29, 0x3e	; 62
  90:	9b 83       	std	Y+3, r25	; 0x03
  92:	8a 83       	std	Y+2, r24	; 0x02
	Std_type error = OK;
  94:	19 82       	std	Y+1, r1	; 0x01
	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Dio_ConfigPort->port_num >= DIO_CONFIGURED_PORTS)
  96:	ea 81       	ldd	r30, Y+2	; 0x02
  98:	fb 81       	ldd	r31, Y+3	; 0x03
  9a:	80 81       	ld	r24, Z
  9c:	84 30       	cpi	r24, 0x04	; 4
  9e:	18 f0       	brcs	.+6      	; 0xa6 <Dio_SetPortDirection+0x24>
	{

		error = NOT_OK;
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	89 83       	std	Y+1, r24	; 0x01
  a4:	5d c0       	rjmp	.+186    	; 0x160 <Dio_SetPortDirection+0xde>
	}
	else
	{
		switch(Dio_ConfigPort->port_num)
  a6:	ea 81       	ldd	r30, Y+2	; 0x02
  a8:	fb 81       	ldd	r31, Y+3	; 0x03
  aa:	80 81       	ld	r24, Z
  ac:	28 2f       	mov	r18, r24
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	3d 83       	std	Y+5, r19	; 0x05
  b2:	2c 83       	std	Y+4, r18	; 0x04
  b4:	8c 81       	ldd	r24, Y+4	; 0x04
  b6:	9d 81       	ldd	r25, Y+5	; 0x05
  b8:	81 30       	cpi	r24, 0x01	; 1
  ba:	91 05       	cpc	r25, r1
  bc:	29 f1       	breq	.+74     	; 0x108 <Dio_SetPortDirection+0x86>
  be:	ec 81       	ldd	r30, Y+4	; 0x04
  c0:	fd 81       	ldd	r31, Y+5	; 0x05
  c2:	e2 30       	cpi	r30, 0x02	; 2
  c4:	f1 05       	cpc	r31, r1
  c6:	34 f4       	brge	.+12     	; 0xd4 <Dio_SetPortDirection+0x52>
  c8:	2c 81       	ldd	r18, Y+4	; 0x04
  ca:	3d 81       	ldd	r19, Y+5	; 0x05
  cc:	21 15       	cp	r18, r1
  ce:	31 05       	cpc	r19, r1
  d0:	61 f0       	breq	.+24     	; 0xea <Dio_SetPortDirection+0x68>
  d2:	46 c0       	rjmp	.+140    	; 0x160 <Dio_SetPortDirection+0xde>
  d4:	8c 81       	ldd	r24, Y+4	; 0x04
  d6:	9d 81       	ldd	r25, Y+5	; 0x05
  d8:	82 30       	cpi	r24, 0x02	; 2
  da:	91 05       	cpc	r25, r1
  dc:	21 f1       	breq	.+72     	; 0x126 <Dio_SetPortDirection+0xa4>
  de:	ec 81       	ldd	r30, Y+4	; 0x04
  e0:	fd 81       	ldd	r31, Y+5	; 0x05
  e2:	e3 30       	cpi	r30, 0x03	; 3
  e4:	f1 05       	cpc	r31, r1
  e6:	71 f1       	breq	.+92     	; 0x144 <Dio_SetPortDirection+0xc2>
  e8:	3b c0       	rjmp	.+118    	; 0x160 <Dio_SetPortDirection+0xde>
		{
		case PORTA_ID:
			DIO_DDRA = Dio_ConfigPort->Direction;
  ea:	2a e3       	ldi	r18, 0x3A	; 58
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	ea 81       	ldd	r30, Y+2	; 0x02
  f0:	fb 81       	ldd	r31, Y+3	; 0x03
  f2:	81 81       	ldd	r24, Z+1	; 0x01
  f4:	88 2f       	mov	r24, r24
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	f9 01       	movw	r30, r18
  fe:	80 83       	st	Z, r24
 100:	91 83       	std	Z+1, r25	; 0x01
 102:	a2 83       	std	Z+2, r26	; 0x02
 104:	b3 83       	std	Z+3, r27	; 0x03
 106:	2c c0       	rjmp	.+88     	; 0x160 <Dio_SetPortDirection+0xde>
			break;
		case PORTB_ID:
			DIO_DDRB = Dio_ConfigPort->Direction;
 108:	27 e3       	ldi	r18, 0x37	; 55
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	ea 81       	ldd	r30, Y+2	; 0x02
 10e:	fb 81       	ldd	r31, Y+3	; 0x03
 110:	81 81       	ldd	r24, Z+1	; 0x01
 112:	88 2f       	mov	r24, r24
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	a0 e0       	ldi	r26, 0x00	; 0
 118:	b0 e0       	ldi	r27, 0x00	; 0
 11a:	f9 01       	movw	r30, r18
 11c:	80 83       	st	Z, r24
 11e:	91 83       	std	Z+1, r25	; 0x01
 120:	a2 83       	std	Z+2, r26	; 0x02
 122:	b3 83       	std	Z+3, r27	; 0x03
 124:	1d c0       	rjmp	.+58     	; 0x160 <Dio_SetPortDirection+0xde>
			break;
		case PORTC_ID:
			DIO_DDRC = Dio_ConfigPort->Direction;
 126:	24 e3       	ldi	r18, 0x34	; 52
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	ea 81       	ldd	r30, Y+2	; 0x02
 12c:	fb 81       	ldd	r31, Y+3	; 0x03
 12e:	81 81       	ldd	r24, Z+1	; 0x01
 130:	88 2f       	mov	r24, r24
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	a0 e0       	ldi	r26, 0x00	; 0
 136:	b0 e0       	ldi	r27, 0x00	; 0
 138:	f9 01       	movw	r30, r18
 13a:	80 83       	st	Z, r24
 13c:	91 83       	std	Z+1, r25	; 0x01
 13e:	a2 83       	std	Z+2, r26	; 0x02
 140:	b3 83       	std	Z+3, r27	; 0x03
 142:	0e c0       	rjmp	.+28     	; 0x160 <Dio_SetPortDirection+0xde>
			break;
		case PORTD_ID:
			DIO_DDRD = Dio_ConfigPort->Direction;
 144:	21 e3       	ldi	r18, 0x31	; 49
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	ea 81       	ldd	r30, Y+2	; 0x02
 14a:	fb 81       	ldd	r31, Y+3	; 0x03
 14c:	81 81       	ldd	r24, Z+1	; 0x01
 14e:	88 2f       	mov	r24, r24
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	a0 e0       	ldi	r26, 0x00	; 0
 154:	b0 e0       	ldi	r27, 0x00	; 0
 156:	f9 01       	movw	r30, r18
 158:	80 83       	st	Z, r24
 15a:	91 83       	std	Z+1, r25	; 0x01
 15c:	a2 83       	std	Z+2, r26	; 0x02
 15e:	b3 83       	std	Z+3, r27	; 0x03
			break;

		}
	}

	return error;
 160:	89 81       	ldd	r24, Y+1	; 0x01
}
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	cf 91       	pop	r28
 16e:	df 91       	pop	r29
 170:	08 95       	ret

00000172 <Dio_SetPinDirection>:

Std_type Dio_SetPinDirection(S_DioSetPinDirection *Dio_ConfigPin)
{
 172:	0f 93       	push	r16
 174:	1f 93       	push	r17
 176:	df 93       	push	r29
 178:	cf 93       	push	r28
 17a:	00 d0       	rcall	.+0      	; 0x17c <Dio_SetPinDirection+0xa>
 17c:	00 d0       	rcall	.+0      	; 0x17e <Dio_SetPinDirection+0xc>
 17e:	0f 92       	push	r0
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62
 184:	9b 83       	std	Y+3, r25	; 0x03
 186:	8a 83       	std	Y+2, r24	; 0x02
	Std_type error = OK;
 188:	19 82       	std	Y+1, r1	; 0x01
	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Dio_ConfigPin->port_num >= DIO_CONFIGURED_PORTS || Dio_ConfigPin->pin_num >DIO_CONFIGURED_PINS)
 18a:	ea 81       	ldd	r30, Y+2	; 0x02
 18c:	fb 81       	ldd	r31, Y+3	; 0x03
 18e:	80 81       	ld	r24, Z
 190:	84 30       	cpi	r24, 0x04	; 4
 192:	28 f4       	brcc	.+10     	; 0x19e <Dio_SetPinDirection+0x2c>
 194:	ea 81       	ldd	r30, Y+2	; 0x02
 196:	fb 81       	ldd	r31, Y+3	; 0x03
 198:	81 81       	ldd	r24, Z+1	; 0x01
 19a:	89 30       	cpi	r24, 0x09	; 9
 19c:	18 f0       	brcs	.+6      	; 0x1a4 <Dio_SetPinDirection+0x32>
	{

		error = NOT_OK;
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	89 83       	std	Y+1, r24	; 0x01
 1a2:	58 c1       	rjmp	.+688    	; 0x454 <Dio_SetPinDirection+0x2e2>
	}
	else
	{
		switch(Dio_ConfigPin->port_num)
 1a4:	ea 81       	ldd	r30, Y+2	; 0x02
 1a6:	fb 81       	ldd	r31, Y+3	; 0x03
 1a8:	80 81       	ld	r24, Z
 1aa:	28 2f       	mov	r18, r24
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	3d 83       	std	Y+5, r19	; 0x05
 1b0:	2c 83       	std	Y+4, r18	; 0x04
 1b2:	8c 81       	ldd	r24, Y+4	; 0x04
 1b4:	9d 81       	ldd	r25, Y+5	; 0x05
 1b6:	81 30       	cpi	r24, 0x01	; 1
 1b8:	91 05       	cpc	r25, r1
 1ba:	09 f4       	brne	.+2      	; 0x1be <Dio_SetPinDirection+0x4c>
 1bc:	65 c0       	rjmp	.+202    	; 0x288 <Dio_SetPinDirection+0x116>
 1be:	ec 81       	ldd	r30, Y+4	; 0x04
 1c0:	fd 81       	ldd	r31, Y+5	; 0x05
 1c2:	e2 30       	cpi	r30, 0x02	; 2
 1c4:	f1 05       	cpc	r31, r1
 1c6:	34 f4       	brge	.+12     	; 0x1d4 <Dio_SetPinDirection+0x62>
 1c8:	2c 81       	ldd	r18, Y+4	; 0x04
 1ca:	3d 81       	ldd	r19, Y+5	; 0x05
 1cc:	21 15       	cp	r18, r1
 1ce:	31 05       	cpc	r19, r1
 1d0:	71 f0       	breq	.+28     	; 0x1ee <Dio_SetPinDirection+0x7c>
 1d2:	40 c1       	rjmp	.+640    	; 0x454 <Dio_SetPinDirection+0x2e2>
 1d4:	8c 81       	ldd	r24, Y+4	; 0x04
 1d6:	9d 81       	ldd	r25, Y+5	; 0x05
 1d8:	82 30       	cpi	r24, 0x02	; 2
 1da:	91 05       	cpc	r25, r1
 1dc:	09 f4       	brne	.+2      	; 0x1e0 <Dio_SetPinDirection+0x6e>
 1de:	a1 c0       	rjmp	.+322    	; 0x322 <Dio_SetPinDirection+0x1b0>
 1e0:	ec 81       	ldd	r30, Y+4	; 0x04
 1e2:	fd 81       	ldd	r31, Y+5	; 0x05
 1e4:	e3 30       	cpi	r30, 0x03	; 3
 1e6:	f1 05       	cpc	r31, r1
 1e8:	09 f4       	brne	.+2      	; 0x1ec <Dio_SetPinDirection+0x7a>
 1ea:	e8 c0       	rjmp	.+464    	; 0x3bc <Dio_SetPinDirection+0x24a>
 1ec:	33 c1       	rjmp	.+614    	; 0x454 <Dio_SetPinDirection+0x2e2>
		{
		case PORTA_ID:
			if(Dio_ConfigPin->Direction == PIN_HIGH)
 1ee:	ea 81       	ldd	r30, Y+2	; 0x02
 1f0:	fb 81       	ldd	r31, Y+3	; 0x03
 1f2:	82 81       	ldd	r24, Z+2	; 0x02
 1f4:	81 30       	cpi	r24, 0x01	; 1
 1f6:	19 f5       	brne	.+70     	; 0x23e <Dio_SetPinDirection+0xcc>
			{
				SET_BIT(DIO_DDRA,Dio_ConfigPin->pin_num);
 1f8:	0a e3       	ldi	r16, 0x3A	; 58
 1fa:	10 e0       	ldi	r17, 0x00	; 0
 1fc:	ea e3       	ldi	r30, 0x3A	; 58
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	40 81       	ld	r20, Z
 202:	51 81       	ldd	r21, Z+1	; 0x01
 204:	62 81       	ldd	r22, Z+2	; 0x02
 206:	73 81       	ldd	r23, Z+3	; 0x03
 208:	ea 81       	ldd	r30, Y+2	; 0x02
 20a:	fb 81       	ldd	r31, Y+3	; 0x03
 20c:	81 81       	ldd	r24, Z+1	; 0x01
 20e:	28 2f       	mov	r18, r24
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 2e       	mov	r0, r18
 218:	02 c0       	rjmp	.+4      	; 0x21e <Dio_SetPinDirection+0xac>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	0a 94       	dec	r0
 220:	e2 f7       	brpl	.-8      	; 0x21a <Dio_SetPinDirection+0xa8>
 222:	aa 27       	eor	r26, r26
 224:	97 fd       	sbrc	r25, 7
 226:	a0 95       	com	r26
 228:	ba 2f       	mov	r27, r26
 22a:	84 2b       	or	r24, r20
 22c:	95 2b       	or	r25, r21
 22e:	a6 2b       	or	r26, r22
 230:	b7 2b       	or	r27, r23
 232:	f8 01       	movw	r30, r16
 234:	80 83       	st	Z, r24
 236:	91 83       	std	Z+1, r25	; 0x01
 238:	a2 83       	std	Z+2, r26	; 0x02
 23a:	b3 83       	std	Z+3, r27	; 0x03
 23c:	0b c1       	rjmp	.+534    	; 0x454 <Dio_SetPinDirection+0x2e2>
			}
			else
			{
				CLEAR_BIT(DIO_DDRA,Dio_ConfigPin->pin_num);
 23e:	0a e3       	ldi	r16, 0x3A	; 58
 240:	10 e0       	ldi	r17, 0x00	; 0
 242:	ea e3       	ldi	r30, 0x3A	; 58
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	40 81       	ld	r20, Z
 248:	51 81       	ldd	r21, Z+1	; 0x01
 24a:	62 81       	ldd	r22, Z+2	; 0x02
 24c:	73 81       	ldd	r23, Z+3	; 0x03
 24e:	ea 81       	ldd	r30, Y+2	; 0x02
 250:	fb 81       	ldd	r31, Y+3	; 0x03
 252:	81 81       	ldd	r24, Z+1	; 0x01
 254:	28 2f       	mov	r18, r24
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 2e       	mov	r0, r18
 25e:	02 c0       	rjmp	.+4      	; 0x264 <Dio_SetPinDirection+0xf2>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	0a 94       	dec	r0
 266:	e2 f7       	brpl	.-8      	; 0x260 <Dio_SetPinDirection+0xee>
 268:	80 95       	com	r24
 26a:	90 95       	com	r25
 26c:	aa 27       	eor	r26, r26
 26e:	97 fd       	sbrc	r25, 7
 270:	a0 95       	com	r26
 272:	ba 2f       	mov	r27, r26
 274:	84 23       	and	r24, r20
 276:	95 23       	and	r25, r21
 278:	a6 23       	and	r26, r22
 27a:	b7 23       	and	r27, r23
 27c:	f8 01       	movw	r30, r16
 27e:	80 83       	st	Z, r24
 280:	91 83       	std	Z+1, r25	; 0x01
 282:	a2 83       	std	Z+2, r26	; 0x02
 284:	b3 83       	std	Z+3, r27	; 0x03
 286:	e6 c0       	rjmp	.+460    	; 0x454 <Dio_SetPinDirection+0x2e2>
			}

			break;
		case PORTB_ID:
			if(Dio_ConfigPin->Direction == PIN_HIGH)
 288:	ea 81       	ldd	r30, Y+2	; 0x02
 28a:	fb 81       	ldd	r31, Y+3	; 0x03
 28c:	82 81       	ldd	r24, Z+2	; 0x02
 28e:	81 30       	cpi	r24, 0x01	; 1
 290:	19 f5       	brne	.+70     	; 0x2d8 <Dio_SetPinDirection+0x166>
			{
				SET_BIT(DIO_DDRB,Dio_ConfigPin->pin_num);
 292:	07 e3       	ldi	r16, 0x37	; 55
 294:	10 e0       	ldi	r17, 0x00	; 0
 296:	e7 e3       	ldi	r30, 0x37	; 55
 298:	f0 e0       	ldi	r31, 0x00	; 0
 29a:	40 81       	ld	r20, Z
 29c:	51 81       	ldd	r21, Z+1	; 0x01
 29e:	62 81       	ldd	r22, Z+2	; 0x02
 2a0:	73 81       	ldd	r23, Z+3	; 0x03
 2a2:	ea 81       	ldd	r30, Y+2	; 0x02
 2a4:	fb 81       	ldd	r31, Y+3	; 0x03
 2a6:	81 81       	ldd	r24, Z+1	; 0x01
 2a8:	28 2f       	mov	r18, r24
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 2e       	mov	r0, r18
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <Dio_SetPinDirection+0x146>
 2b4:	88 0f       	add	r24, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	0a 94       	dec	r0
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <Dio_SetPinDirection+0x142>
 2bc:	aa 27       	eor	r26, r26
 2be:	97 fd       	sbrc	r25, 7
 2c0:	a0 95       	com	r26
 2c2:	ba 2f       	mov	r27, r26
 2c4:	84 2b       	or	r24, r20
 2c6:	95 2b       	or	r25, r21
 2c8:	a6 2b       	or	r26, r22
 2ca:	b7 2b       	or	r27, r23
 2cc:	f8 01       	movw	r30, r16
 2ce:	80 83       	st	Z, r24
 2d0:	91 83       	std	Z+1, r25	; 0x01
 2d2:	a2 83       	std	Z+2, r26	; 0x02
 2d4:	b3 83       	std	Z+3, r27	; 0x03
 2d6:	be c0       	rjmp	.+380    	; 0x454 <Dio_SetPinDirection+0x2e2>
			}
			else
			{
				CLEAR_BIT(DIO_DDRB,Dio_ConfigPin->pin_num);
 2d8:	07 e3       	ldi	r16, 0x37	; 55
 2da:	10 e0       	ldi	r17, 0x00	; 0
 2dc:	e7 e3       	ldi	r30, 0x37	; 55
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	40 81       	ld	r20, Z
 2e2:	51 81       	ldd	r21, Z+1	; 0x01
 2e4:	62 81       	ldd	r22, Z+2	; 0x02
 2e6:	73 81       	ldd	r23, Z+3	; 0x03
 2e8:	ea 81       	ldd	r30, Y+2	; 0x02
 2ea:	fb 81       	ldd	r31, Y+3	; 0x03
 2ec:	81 81       	ldd	r24, Z+1	; 0x01
 2ee:	28 2f       	mov	r18, r24
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	02 2e       	mov	r0, r18
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <Dio_SetPinDirection+0x18c>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	0a 94       	dec	r0
 300:	e2 f7       	brpl	.-8      	; 0x2fa <Dio_SetPinDirection+0x188>
 302:	80 95       	com	r24
 304:	90 95       	com	r25
 306:	aa 27       	eor	r26, r26
 308:	97 fd       	sbrc	r25, 7
 30a:	a0 95       	com	r26
 30c:	ba 2f       	mov	r27, r26
 30e:	84 23       	and	r24, r20
 310:	95 23       	and	r25, r21
 312:	a6 23       	and	r26, r22
 314:	b7 23       	and	r27, r23
 316:	f8 01       	movw	r30, r16
 318:	80 83       	st	Z, r24
 31a:	91 83       	std	Z+1, r25	; 0x01
 31c:	a2 83       	std	Z+2, r26	; 0x02
 31e:	b3 83       	std	Z+3, r27	; 0x03
 320:	99 c0       	rjmp	.+306    	; 0x454 <Dio_SetPinDirection+0x2e2>
			}
			break;
		case PORTC_ID:
			if(Dio_ConfigPin->Direction == PIN_HIGH)
 322:	ea 81       	ldd	r30, Y+2	; 0x02
 324:	fb 81       	ldd	r31, Y+3	; 0x03
 326:	82 81       	ldd	r24, Z+2	; 0x02
 328:	81 30       	cpi	r24, 0x01	; 1
 32a:	19 f5       	brne	.+70     	; 0x372 <Dio_SetPinDirection+0x200>
			{
				SET_BIT(DIO_DDRC,Dio_ConfigPin->pin_num);
 32c:	04 e3       	ldi	r16, 0x34	; 52
 32e:	10 e0       	ldi	r17, 0x00	; 0
 330:	e4 e3       	ldi	r30, 0x34	; 52
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	40 81       	ld	r20, Z
 336:	51 81       	ldd	r21, Z+1	; 0x01
 338:	62 81       	ldd	r22, Z+2	; 0x02
 33a:	73 81       	ldd	r23, Z+3	; 0x03
 33c:	ea 81       	ldd	r30, Y+2	; 0x02
 33e:	fb 81       	ldd	r31, Y+3	; 0x03
 340:	81 81       	ldd	r24, Z+1	; 0x01
 342:	28 2f       	mov	r18, r24
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	02 2e       	mov	r0, r18
 34c:	02 c0       	rjmp	.+4      	; 0x352 <Dio_SetPinDirection+0x1e0>
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	0a 94       	dec	r0
 354:	e2 f7       	brpl	.-8      	; 0x34e <Dio_SetPinDirection+0x1dc>
 356:	aa 27       	eor	r26, r26
 358:	97 fd       	sbrc	r25, 7
 35a:	a0 95       	com	r26
 35c:	ba 2f       	mov	r27, r26
 35e:	84 2b       	or	r24, r20
 360:	95 2b       	or	r25, r21
 362:	a6 2b       	or	r26, r22
 364:	b7 2b       	or	r27, r23
 366:	f8 01       	movw	r30, r16
 368:	80 83       	st	Z, r24
 36a:	91 83       	std	Z+1, r25	; 0x01
 36c:	a2 83       	std	Z+2, r26	; 0x02
 36e:	b3 83       	std	Z+3, r27	; 0x03
 370:	71 c0       	rjmp	.+226    	; 0x454 <Dio_SetPinDirection+0x2e2>
			}
			else
			{
				CLEAR_BIT(DIO_DDRC,Dio_ConfigPin->pin_num);
 372:	04 e3       	ldi	r16, 0x34	; 52
 374:	10 e0       	ldi	r17, 0x00	; 0
 376:	e4 e3       	ldi	r30, 0x34	; 52
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	40 81       	ld	r20, Z
 37c:	51 81       	ldd	r21, Z+1	; 0x01
 37e:	62 81       	ldd	r22, Z+2	; 0x02
 380:	73 81       	ldd	r23, Z+3	; 0x03
 382:	ea 81       	ldd	r30, Y+2	; 0x02
 384:	fb 81       	ldd	r31, Y+3	; 0x03
 386:	81 81       	ldd	r24, Z+1	; 0x01
 388:	28 2f       	mov	r18, r24
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	02 2e       	mov	r0, r18
 392:	02 c0       	rjmp	.+4      	; 0x398 <Dio_SetPinDirection+0x226>
 394:	88 0f       	add	r24, r24
 396:	99 1f       	adc	r25, r25
 398:	0a 94       	dec	r0
 39a:	e2 f7       	brpl	.-8      	; 0x394 <Dio_SetPinDirection+0x222>
 39c:	80 95       	com	r24
 39e:	90 95       	com	r25
 3a0:	aa 27       	eor	r26, r26
 3a2:	97 fd       	sbrc	r25, 7
 3a4:	a0 95       	com	r26
 3a6:	ba 2f       	mov	r27, r26
 3a8:	84 23       	and	r24, r20
 3aa:	95 23       	and	r25, r21
 3ac:	a6 23       	and	r26, r22
 3ae:	b7 23       	and	r27, r23
 3b0:	f8 01       	movw	r30, r16
 3b2:	80 83       	st	Z, r24
 3b4:	91 83       	std	Z+1, r25	; 0x01
 3b6:	a2 83       	std	Z+2, r26	; 0x02
 3b8:	b3 83       	std	Z+3, r27	; 0x03
 3ba:	4c c0       	rjmp	.+152    	; 0x454 <Dio_SetPinDirection+0x2e2>
			}
			break;
		case PORTD_ID:
			if(Dio_ConfigPin->Direction == PIN_HIGH)
 3bc:	ea 81       	ldd	r30, Y+2	; 0x02
 3be:	fb 81       	ldd	r31, Y+3	; 0x03
 3c0:	82 81       	ldd	r24, Z+2	; 0x02
 3c2:	81 30       	cpi	r24, 0x01	; 1
 3c4:	19 f5       	brne	.+70     	; 0x40c <Dio_SetPinDirection+0x29a>
			{
				SET_BIT(DIO_DDRD,Dio_ConfigPin->pin_num);
 3c6:	01 e3       	ldi	r16, 0x31	; 49
 3c8:	10 e0       	ldi	r17, 0x00	; 0
 3ca:	e1 e3       	ldi	r30, 0x31	; 49
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	40 81       	ld	r20, Z
 3d0:	51 81       	ldd	r21, Z+1	; 0x01
 3d2:	62 81       	ldd	r22, Z+2	; 0x02
 3d4:	73 81       	ldd	r23, Z+3	; 0x03
 3d6:	ea 81       	ldd	r30, Y+2	; 0x02
 3d8:	fb 81       	ldd	r31, Y+3	; 0x03
 3da:	81 81       	ldd	r24, Z+1	; 0x01
 3dc:	28 2f       	mov	r18, r24
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	02 2e       	mov	r0, r18
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <Dio_SetPinDirection+0x27a>
 3e8:	88 0f       	add	r24, r24
 3ea:	99 1f       	adc	r25, r25
 3ec:	0a 94       	dec	r0
 3ee:	e2 f7       	brpl	.-8      	; 0x3e8 <Dio_SetPinDirection+0x276>
 3f0:	aa 27       	eor	r26, r26
 3f2:	97 fd       	sbrc	r25, 7
 3f4:	a0 95       	com	r26
 3f6:	ba 2f       	mov	r27, r26
 3f8:	84 2b       	or	r24, r20
 3fa:	95 2b       	or	r25, r21
 3fc:	a6 2b       	or	r26, r22
 3fe:	b7 2b       	or	r27, r23
 400:	f8 01       	movw	r30, r16
 402:	80 83       	st	Z, r24
 404:	91 83       	std	Z+1, r25	; 0x01
 406:	a2 83       	std	Z+2, r26	; 0x02
 408:	b3 83       	std	Z+3, r27	; 0x03
 40a:	24 c0       	rjmp	.+72     	; 0x454 <Dio_SetPinDirection+0x2e2>
			}
			else
			{
				CLEAR_BIT(DIO_DDRD,Dio_ConfigPin->pin_num);
 40c:	01 e3       	ldi	r16, 0x31	; 49
 40e:	10 e0       	ldi	r17, 0x00	; 0
 410:	e1 e3       	ldi	r30, 0x31	; 49
 412:	f0 e0       	ldi	r31, 0x00	; 0
 414:	40 81       	ld	r20, Z
 416:	51 81       	ldd	r21, Z+1	; 0x01
 418:	62 81       	ldd	r22, Z+2	; 0x02
 41a:	73 81       	ldd	r23, Z+3	; 0x03
 41c:	ea 81       	ldd	r30, Y+2	; 0x02
 41e:	fb 81       	ldd	r31, Y+3	; 0x03
 420:	81 81       	ldd	r24, Z+1	; 0x01
 422:	28 2f       	mov	r18, r24
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	02 2e       	mov	r0, r18
 42c:	02 c0       	rjmp	.+4      	; 0x432 <Dio_SetPinDirection+0x2c0>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	0a 94       	dec	r0
 434:	e2 f7       	brpl	.-8      	; 0x42e <Dio_SetPinDirection+0x2bc>
 436:	80 95       	com	r24
 438:	90 95       	com	r25
 43a:	aa 27       	eor	r26, r26
 43c:	97 fd       	sbrc	r25, 7
 43e:	a0 95       	com	r26
 440:	ba 2f       	mov	r27, r26
 442:	84 23       	and	r24, r20
 444:	95 23       	and	r25, r21
 446:	a6 23       	and	r26, r22
 448:	b7 23       	and	r27, r23
 44a:	f8 01       	movw	r30, r16
 44c:	80 83       	st	Z, r24
 44e:	91 83       	std	Z+1, r25	; 0x01
 450:	a2 83       	std	Z+2, r26	; 0x02
 452:	b3 83       	std	Z+3, r27	; 0x03
			break;

		}
	}

	return error;
 454:	89 81       	ldd	r24, Y+1	; 0x01

}
 456:	0f 90       	pop	r0
 458:	0f 90       	pop	r0
 45a:	0f 90       	pop	r0
 45c:	0f 90       	pop	r0
 45e:	0f 90       	pop	r0
 460:	cf 91       	pop	r28
 462:	df 91       	pop	r29
 464:	1f 91       	pop	r17
 466:	0f 91       	pop	r16
 468:	08 95       	ret

0000046a <Dio_ReadPort>:


Std_type Dio_ReadPort(E_DioPort Port_Num,u8PortValue Port_Value)
{
 46a:	df 93       	push	r29
 46c:	cf 93       	push	r28
 46e:	00 d0       	rcall	.+0      	; 0x470 <Dio_ReadPort+0x6>
 470:	00 d0       	rcall	.+0      	; 0x472 <Dio_ReadPort+0x8>
 472:	0f 92       	push	r0
 474:	cd b7       	in	r28, 0x3d	; 61
 476:	de b7       	in	r29, 0x3e	; 62
 478:	8a 83       	std	Y+2, r24	; 0x02
 47a:	6b 83       	std	Y+3, r22	; 0x03
	Std_type error = OK;
 47c:	19 82       	std	Y+1, r1	; 0x01
	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Port_Num > DIO_CONFIGURED_PORTS)
 47e:	8a 81       	ldd	r24, Y+2	; 0x02
 480:	85 30       	cpi	r24, 0x05	; 5
 482:	18 f0       	brcs	.+6      	; 0x48a <Dio_ReadPort+0x20>
	{

		error = NOT_OK;
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	89 83       	std	Y+1, r24	; 0x01
 488:	3e c0       	rjmp	.+124    	; 0x506 <Dio_ReadPort+0x9c>
	}
	else
	{
		switch (Port_Num)
 48a:	8a 81       	ldd	r24, Y+2	; 0x02
 48c:	28 2f       	mov	r18, r24
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	3d 83       	std	Y+5, r19	; 0x05
 492:	2c 83       	std	Y+4, r18	; 0x04
 494:	8c 81       	ldd	r24, Y+4	; 0x04
 496:	9d 81       	ldd	r25, Y+5	; 0x05
 498:	81 30       	cpi	r24, 0x01	; 1
 49a:	91 05       	cpc	r25, r1
 49c:	e9 f0       	breq	.+58     	; 0x4d8 <Dio_ReadPort+0x6e>
 49e:	2c 81       	ldd	r18, Y+4	; 0x04
 4a0:	3d 81       	ldd	r19, Y+5	; 0x05
 4a2:	22 30       	cpi	r18, 0x02	; 2
 4a4:	31 05       	cpc	r19, r1
 4a6:	2c f4       	brge	.+10     	; 0x4b2 <Dio_ReadPort+0x48>
 4a8:	8c 81       	ldd	r24, Y+4	; 0x04
 4aa:	9d 81       	ldd	r25, Y+5	; 0x05
 4ac:	00 97       	sbiw	r24, 0x00	; 0
 4ae:	61 f0       	breq	.+24     	; 0x4c8 <Dio_ReadPort+0x5e>
 4b0:	2a c0       	rjmp	.+84     	; 0x506 <Dio_ReadPort+0x9c>
 4b2:	2c 81       	ldd	r18, Y+4	; 0x04
 4b4:	3d 81       	ldd	r19, Y+5	; 0x05
 4b6:	22 30       	cpi	r18, 0x02	; 2
 4b8:	31 05       	cpc	r19, r1
 4ba:	b1 f0       	breq	.+44     	; 0x4e8 <Dio_ReadPort+0x7e>
 4bc:	8c 81       	ldd	r24, Y+4	; 0x04
 4be:	9d 81       	ldd	r25, Y+5	; 0x05
 4c0:	83 30       	cpi	r24, 0x03	; 3
 4c2:	91 05       	cpc	r25, r1
 4c4:	c9 f0       	breq	.+50     	; 0x4f8 <Dio_ReadPort+0x8e>
 4c6:	1f c0       	rjmp	.+62     	; 0x506 <Dio_ReadPort+0x9c>
		{
		case PORTA_ID:
			Port_Value = DIO_PINA;
 4c8:	e9 e3       	ldi	r30, 0x39	; 57
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	80 81       	ld	r24, Z
 4ce:	91 81       	ldd	r25, Z+1	; 0x01
 4d0:	a2 81       	ldd	r26, Z+2	; 0x02
 4d2:	b3 81       	ldd	r27, Z+3	; 0x03
 4d4:	8b 83       	std	Y+3, r24	; 0x03
 4d6:	17 c0       	rjmp	.+46     	; 0x506 <Dio_ReadPort+0x9c>
			break;
		case PORTB_ID:
			Port_Value = DIO_PINB;
 4d8:	e6 e3       	ldi	r30, 0x36	; 54
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	80 81       	ld	r24, Z
 4de:	91 81       	ldd	r25, Z+1	; 0x01
 4e0:	a2 81       	ldd	r26, Z+2	; 0x02
 4e2:	b3 81       	ldd	r27, Z+3	; 0x03
 4e4:	8b 83       	std	Y+3, r24	; 0x03
 4e6:	0f c0       	rjmp	.+30     	; 0x506 <Dio_ReadPort+0x9c>
			break;
		case PORTC_ID:
			Port_Value = DIO_PINC;
 4e8:	e3 e3       	ldi	r30, 0x33	; 51
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	80 81       	ld	r24, Z
 4ee:	91 81       	ldd	r25, Z+1	; 0x01
 4f0:	a2 81       	ldd	r26, Z+2	; 0x02
 4f2:	b3 81       	ldd	r27, Z+3	; 0x03
 4f4:	8b 83       	std	Y+3, r24	; 0x03
 4f6:	07 c0       	rjmp	.+14     	; 0x506 <Dio_ReadPort+0x9c>
			break;
		case PORTD_ID:
			Port_Value = DIO_PIND;
 4f8:	e0 e3       	ldi	r30, 0x30	; 48
 4fa:	f0 e0       	ldi	r31, 0x00	; 0
 4fc:	80 81       	ld	r24, Z
 4fe:	91 81       	ldd	r25, Z+1	; 0x01
 500:	a2 81       	ldd	r26, Z+2	; 0x02
 502:	b3 81       	ldd	r27, Z+3	; 0x03
 504:	8b 83       	std	Y+3, r24	; 0x03
			break;

		}
	}
	return error;
 506:	89 81       	ldd	r24, Y+1	; 0x01
}
 508:	0f 90       	pop	r0
 50a:	0f 90       	pop	r0
 50c:	0f 90       	pop	r0
 50e:	0f 90       	pop	r0
 510:	0f 90       	pop	r0
 512:	cf 91       	pop	r28
 514:	df 91       	pop	r29
 516:	08 95       	ret

00000518 <Dio_ReadPin>:

Std_type Dio_ReadPin(E_DioPort Port_Num, E_DioPin Pin_Num,u8PinValue Pin_Value)
{
 518:	df 93       	push	r29
 51a:	cf 93       	push	r28
 51c:	00 d0       	rcall	.+0      	; 0x51e <Dio_ReadPin+0x6>
 51e:	00 d0       	rcall	.+0      	; 0x520 <Dio_ReadPin+0x8>
 520:	cd b7       	in	r28, 0x3d	; 61
 522:	de b7       	in	r29, 0x3e	; 62
 524:	89 83       	std	Y+1, r24	; 0x01
 526:	6a 83       	std	Y+2, r22	; 0x02
 528:	4b 83       	std	Y+3, r20	; 0x03


}
 52a:	0f 90       	pop	r0
 52c:	0f 90       	pop	r0
 52e:	0f 90       	pop	r0
 530:	0f 90       	pop	r0
 532:	cf 91       	pop	r28
 534:	df 91       	pop	r29
 536:	08 95       	ret

00000538 <main>:
#include "DIO_interface.h"



int main()
{
 538:	df 93       	push	r29
 53a:	cf 93       	push	r28
 53c:	cd b7       	in	r28, 0x3d	; 61
 53e:	de b7       	in	r29, 0x3e	; 62
 540:	63 97       	sbiw	r28, 0x13	; 19
 542:	0f b6       	in	r0, 0x3f	; 63
 544:	f8 94       	cli
 546:	de bf       	out	0x3e, r29	; 62
 548:	0f be       	out	0x3f, r0	; 63
 54a:	cd bf       	out	0x3d, r28	; 61
	S_DioSetPortDirection P1={PORTD_ID,PORT_INPUT};
 54c:	83 e0       	ldi	r24, 0x03	; 3
 54e:	8a 83       	std	Y+2, r24	; 0x02
 550:	1b 82       	std	Y+3, r1	; 0x03

	S_DioSetPinDirection p2={PORTC_ID,PIN4_ID,PIN_HIGH};
 552:	ce 01       	movw	r24, r28
 554:	04 96       	adiw	r24, 0x04	; 4
 556:	9b 87       	std	Y+11, r25	; 0x0b
 558:	8a 87       	std	Y+10, r24	; 0x0a
 55a:	e3 e6       	ldi	r30, 0x63	; 99
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	fd 87       	std	Y+13, r31	; 0x0d
 560:	ec 87       	std	Y+12, r30	; 0x0c
 562:	f3 e0       	ldi	r31, 0x03	; 3
 564:	fe 87       	std	Y+14, r31	; 0x0e
 566:	ec 85       	ldd	r30, Y+12	; 0x0c
 568:	fd 85       	ldd	r31, Y+13	; 0x0d
 56a:	00 80       	ld	r0, Z
 56c:	8c 85       	ldd	r24, Y+12	; 0x0c
 56e:	9d 85       	ldd	r25, Y+13	; 0x0d
 570:	01 96       	adiw	r24, 0x01	; 1
 572:	9d 87       	std	Y+13, r25	; 0x0d
 574:	8c 87       	std	Y+12, r24	; 0x0c
 576:	ea 85       	ldd	r30, Y+10	; 0x0a
 578:	fb 85       	ldd	r31, Y+11	; 0x0b
 57a:	00 82       	st	Z, r0
 57c:	8a 85       	ldd	r24, Y+10	; 0x0a
 57e:	9b 85       	ldd	r25, Y+11	; 0x0b
 580:	01 96       	adiw	r24, 0x01	; 1
 582:	9b 87       	std	Y+11, r25	; 0x0b
 584:	8a 87       	std	Y+10, r24	; 0x0a
 586:	9e 85       	ldd	r25, Y+14	; 0x0e
 588:	91 50       	subi	r25, 0x01	; 1
 58a:	9e 87       	std	Y+14, r25	; 0x0e
 58c:	ee 85       	ldd	r30, Y+14	; 0x0e
 58e:	ee 23       	and	r30, r30
 590:	51 f7       	brne	.-44     	; 0x566 <main+0x2e>
	S_DioSetPinDirection p3={PORTA_ID,PIN5_ID,PIN_HIGH};
 592:	ce 01       	movw	r24, r28
 594:	07 96       	adiw	r24, 0x07	; 7
 596:	98 8b       	std	Y+16, r25	; 0x10
 598:	8f 87       	std	Y+15, r24	; 0x0f
 59a:	e0 e6       	ldi	r30, 0x60	; 96
 59c:	f0 e0       	ldi	r31, 0x00	; 0
 59e:	fa 8b       	std	Y+18, r31	; 0x12
 5a0:	e9 8b       	std	Y+17, r30	; 0x11
 5a2:	f3 e0       	ldi	r31, 0x03	; 3
 5a4:	fb 8b       	std	Y+19, r31	; 0x13
 5a6:	e9 89       	ldd	r30, Y+17	; 0x11
 5a8:	fa 89       	ldd	r31, Y+18	; 0x12
 5aa:	00 80       	ld	r0, Z
 5ac:	89 89       	ldd	r24, Y+17	; 0x11
 5ae:	9a 89       	ldd	r25, Y+18	; 0x12
 5b0:	01 96       	adiw	r24, 0x01	; 1
 5b2:	9a 8b       	std	Y+18, r25	; 0x12
 5b4:	89 8b       	std	Y+17, r24	; 0x11
 5b6:	ef 85       	ldd	r30, Y+15	; 0x0f
 5b8:	f8 89       	ldd	r31, Y+16	; 0x10
 5ba:	00 82       	st	Z, r0
 5bc:	8f 85       	ldd	r24, Y+15	; 0x0f
 5be:	98 89       	ldd	r25, Y+16	; 0x10
 5c0:	01 96       	adiw	r24, 0x01	; 1
 5c2:	98 8b       	std	Y+16, r25	; 0x10
 5c4:	8f 87       	std	Y+15, r24	; 0x0f
 5c6:	9b 89       	ldd	r25, Y+19	; 0x13
 5c8:	91 50       	subi	r25, 0x01	; 1
 5ca:	9b 8b       	std	Y+19, r25	; 0x13
 5cc:	eb 89       	ldd	r30, Y+19	; 0x13
 5ce:	ee 23       	and	r30, r30
 5d0:	51 f7       	brne	.-44     	; 0x5a6 <main+0x6e>

	u8PortValue x;
	x = 0xFF;
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	89 83       	std	Y+1, r24	; 0x01
	Dio_SetPortDirection(&P1);
 5d6:	ce 01       	movw	r24, r28
 5d8:	02 96       	adiw	r24, 0x02	; 2
 5da:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPortDirection>
	Dio_ReadPort(PORTD_ID,x);
 5de:	83 e0       	ldi	r24, 0x03	; 3
 5e0:	69 81       	ldd	r22, Y+1	; 0x01
 5e2:	0e 94 35 02 	call	0x46a	; 0x46a <Dio_ReadPort>
	if(x)
 5e6:	89 81       	ldd	r24, Y+1	; 0x01
 5e8:	88 23       	and	r24, r24
 5ea:	29 f0       	breq	.+10     	; 0x5f6 <main+0xbe>
	{

		 Dio_SetPinDirection(&p2);
 5ec:	ce 01       	movw	r24, r28
 5ee:	04 96       	adiw	r24, 0x04	; 4
 5f0:	0e 94 b9 00 	call	0x172	; 0x172 <Dio_SetPinDirection>
 5f4:	04 c0       	rjmp	.+8      	; 0x5fe <main+0xc6>
	}
	else
	{
		//DDRA |=(1<<3);
		Dio_SetPinDirection(&p3);
 5f6:	ce 01       	movw	r24, r28
 5f8:	07 96       	adiw	r24, 0x07	; 7
 5fa:	0e 94 b9 00 	call	0x172	; 0x172 <Dio_SetPinDirection>
 5fe:	ff cf       	rjmp	.-2      	; 0x5fe <main+0xc6>

00000600 <_exit>:
 600:	f8 94       	cli

00000602 <__stop_program>:
 602:	ff cf       	rjmp	.-2      	; 0x602 <__stop_program>
