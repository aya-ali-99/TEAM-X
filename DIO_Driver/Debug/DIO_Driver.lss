
DIO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009a4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000009a4  00000a18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000c9c  00000000  00000000  00000a24  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000aec  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ea       	ldi	r30, 0xA4	; 164
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 47 04 	call	0x88e	; 0x88e <main>
  7a:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <MCAL_Dio_Init>:
 */

#include "DIO_interface.h"

Std_type MCAL_Dio_Init(S_Dio *Dio_Config)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	27 97       	sbiw	r28, 0x07	; 7
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
  96:	9d 83       	std	Y+5, r25	; 0x05
  98:	8c 83       	std	Y+4, r24	; 0x04
	Std_type error = OK;
  9a:	1b 82       	std	Y+3, r1	; 0x03
	u8RegisterValue Mask1,Mask2;
	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Dio_Config->port_num >= DIO_CONFIGURED_PORTS)
  9c:	ec 81       	ldd	r30, Y+4	; 0x04
  9e:	fd 81       	ldd	r31, Y+5	; 0x05
  a0:	80 81       	ld	r24, Z
  a2:	84 30       	cpi	r24, 0x04	; 4
  a4:	18 f0       	brcs	.+6      	; 0xac <MCAL_Dio_Init+0x2a>
	{

		error = NOT_OK;
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	8b 83       	std	Y+3, r24	; 0x03
  aa:	95 c0       	rjmp	.+298    	; 0x1d6 <MCAL_Dio_Init+0x154>
	}
	else
	{

		Mask2 = ((Dio_Config->pin_num) & (Dio_Config->Direction));
  ac:	ec 81       	ldd	r30, Y+4	; 0x04
  ae:	fd 81       	ldd	r31, Y+5	; 0x05
  b0:	91 81       	ldd	r25, Z+1	; 0x01
  b2:	ec 81       	ldd	r30, Y+4	; 0x04
  b4:	fd 81       	ldd	r31, Y+5	; 0x05
  b6:	82 81       	ldd	r24, Z+2	; 0x02
  b8:	89 23       	and	r24, r25
  ba:	89 83       	std	Y+1, r24	; 0x01
		switch(Dio_Config->port_num)
  bc:	ec 81       	ldd	r30, Y+4	; 0x04
  be:	fd 81       	ldd	r31, Y+5	; 0x05
  c0:	80 81       	ld	r24, Z
  c2:	28 2f       	mov	r18, r24
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	3f 83       	std	Y+7, r19	; 0x07
  c8:	2e 83       	std	Y+6, r18	; 0x06
  ca:	8e 81       	ldd	r24, Y+6	; 0x06
  cc:	9f 81       	ldd	r25, Y+7	; 0x07
  ce:	81 30       	cpi	r24, 0x01	; 1
  d0:	91 05       	cpc	r25, r1
  d2:	89 f1       	breq	.+98     	; 0x136 <MCAL_Dio_Init+0xb4>
  d4:	2e 81       	ldd	r18, Y+6	; 0x06
  d6:	3f 81       	ldd	r19, Y+7	; 0x07
  d8:	22 30       	cpi	r18, 0x02	; 2
  da:	31 05       	cpc	r19, r1
  dc:	2c f4       	brge	.+10     	; 0xe8 <MCAL_Dio_Init+0x66>
  de:	8e 81       	ldd	r24, Y+6	; 0x06
  e0:	9f 81       	ldd	r25, Y+7	; 0x07
  e2:	00 97       	sbiw	r24, 0x00	; 0
  e4:	69 f0       	breq	.+26     	; 0x100 <MCAL_Dio_Init+0x7e>
  e6:	77 c0       	rjmp	.+238    	; 0x1d6 <MCAL_Dio_Init+0x154>
  e8:	2e 81       	ldd	r18, Y+6	; 0x06
  ea:	3f 81       	ldd	r19, Y+7	; 0x07
  ec:	22 30       	cpi	r18, 0x02	; 2
  ee:	31 05       	cpc	r19, r1
  f0:	e9 f1       	breq	.+122    	; 0x16c <MCAL_Dio_Init+0xea>
  f2:	8e 81       	ldd	r24, Y+6	; 0x06
  f4:	9f 81       	ldd	r25, Y+7	; 0x07
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	91 05       	cpc	r25, r1
  fa:	09 f4       	brne	.+2      	; 0xfe <MCAL_Dio_Init+0x7c>
  fc:	52 c0       	rjmp	.+164    	; 0x1a2 <MCAL_Dio_Init+0x120>
  fe:	6b c0       	rjmp	.+214    	; 0x1d6 <MCAL_Dio_Init+0x154>
		{
		case PORTA_ID:
			Mask1 = ((DIO_DDRA) & (~(Dio_Config->pin_num)));
 100:	ea e3       	ldi	r30, 0x3A	; 58
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	91 81       	ldd	r25, Z+1	; 0x01
 108:	a2 81       	ldd	r26, Z+2	; 0x02
 10a:	b3 81       	ldd	r27, Z+3	; 0x03
 10c:	98 2f       	mov	r25, r24
 10e:	ec 81       	ldd	r30, Y+4	; 0x04
 110:	fd 81       	ldd	r31, Y+5	; 0x05
 112:	81 81       	ldd	r24, Z+1	; 0x01
 114:	80 95       	com	r24
 116:	89 23       	and	r24, r25
 118:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRA = Mask1 | Mask2;
 11a:	ea e3       	ldi	r30, 0x3A	; 58
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	9a 81       	ldd	r25, Y+2	; 0x02
 120:	89 81       	ldd	r24, Y+1	; 0x01
 122:	89 2b       	or	r24, r25
 124:	88 2f       	mov	r24, r24
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	a0 e0       	ldi	r26, 0x00	; 0
 12a:	b0 e0       	ldi	r27, 0x00	; 0
 12c:	80 83       	st	Z, r24
 12e:	91 83       	std	Z+1, r25	; 0x01
 130:	a2 83       	std	Z+2, r26	; 0x02
 132:	b3 83       	std	Z+3, r27	; 0x03
 134:	50 c0       	rjmp	.+160    	; 0x1d6 <MCAL_Dio_Init+0x154>
			break;
		case PORTB_ID:
			Mask1 = ((DIO_DDRB) & (~(Dio_Config->pin_num)));
 136:	e7 e3       	ldi	r30, 0x37	; 55
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	91 81       	ldd	r25, Z+1	; 0x01
 13e:	a2 81       	ldd	r26, Z+2	; 0x02
 140:	b3 81       	ldd	r27, Z+3	; 0x03
 142:	98 2f       	mov	r25, r24
 144:	ec 81       	ldd	r30, Y+4	; 0x04
 146:	fd 81       	ldd	r31, Y+5	; 0x05
 148:	81 81       	ldd	r24, Z+1	; 0x01
 14a:	80 95       	com	r24
 14c:	89 23       	and	r24, r25
 14e:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRB = Mask1 | Mask2;
 150:	e7 e3       	ldi	r30, 0x37	; 55
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	9a 81       	ldd	r25, Y+2	; 0x02
 156:	89 81       	ldd	r24, Y+1	; 0x01
 158:	89 2b       	or	r24, r25
 15a:	88 2f       	mov	r24, r24
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	a0 e0       	ldi	r26, 0x00	; 0
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	80 83       	st	Z, r24
 164:	91 83       	std	Z+1, r25	; 0x01
 166:	a2 83       	std	Z+2, r26	; 0x02
 168:	b3 83       	std	Z+3, r27	; 0x03
 16a:	35 c0       	rjmp	.+106    	; 0x1d6 <MCAL_Dio_Init+0x154>
			break;
		case PORTC_ID:
			Mask1 = ((DIO_DDRC) & (~(Dio_Config->pin_num)));
 16c:	e4 e3       	ldi	r30, 0x34	; 52
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	91 81       	ldd	r25, Z+1	; 0x01
 174:	a2 81       	ldd	r26, Z+2	; 0x02
 176:	b3 81       	ldd	r27, Z+3	; 0x03
 178:	98 2f       	mov	r25, r24
 17a:	ec 81       	ldd	r30, Y+4	; 0x04
 17c:	fd 81       	ldd	r31, Y+5	; 0x05
 17e:	81 81       	ldd	r24, Z+1	; 0x01
 180:	80 95       	com	r24
 182:	89 23       	and	r24, r25
 184:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRC = Mask1 | Mask2;
 186:	e4 e3       	ldi	r30, 0x34	; 52
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	9a 81       	ldd	r25, Y+2	; 0x02
 18c:	89 81       	ldd	r24, Y+1	; 0x01
 18e:	89 2b       	or	r24, r25
 190:	88 2f       	mov	r24, r24
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	a0 e0       	ldi	r26, 0x00	; 0
 196:	b0 e0       	ldi	r27, 0x00	; 0
 198:	80 83       	st	Z, r24
 19a:	91 83       	std	Z+1, r25	; 0x01
 19c:	a2 83       	std	Z+2, r26	; 0x02
 19e:	b3 83       	std	Z+3, r27	; 0x03
 1a0:	1a c0       	rjmp	.+52     	; 0x1d6 <MCAL_Dio_Init+0x154>
			break;
		case PORTD_ID:
			Mask1 = ((DIO_DDRD) & (~(Dio_Config->pin_num)));
 1a2:	e1 e3       	ldi	r30, 0x31	; 49
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	91 81       	ldd	r25, Z+1	; 0x01
 1aa:	a2 81       	ldd	r26, Z+2	; 0x02
 1ac:	b3 81       	ldd	r27, Z+3	; 0x03
 1ae:	98 2f       	mov	r25, r24
 1b0:	ec 81       	ldd	r30, Y+4	; 0x04
 1b2:	fd 81       	ldd	r31, Y+5	; 0x05
 1b4:	81 81       	ldd	r24, Z+1	; 0x01
 1b6:	80 95       	com	r24
 1b8:	89 23       	and	r24, r25
 1ba:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRD = Mask1 | Mask2;
 1bc:	e1 e3       	ldi	r30, 0x31	; 49
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	9a 81       	ldd	r25, Y+2	; 0x02
 1c2:	89 81       	ldd	r24, Y+1	; 0x01
 1c4:	89 2b       	or	r24, r25
 1c6:	88 2f       	mov	r24, r24
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	a0 e0       	ldi	r26, 0x00	; 0
 1cc:	b0 e0       	ldi	r27, 0x00	; 0
 1ce:	80 83       	st	Z, r24
 1d0:	91 83       	std	Z+1, r25	; 0x01
 1d2:	a2 83       	std	Z+2, r26	; 0x02
 1d4:	b3 83       	std	Z+3, r27	; 0x03
			break;

		}
	}

	return error;
 1d6:	8b 81       	ldd	r24, Y+3	; 0x03
}
 1d8:	27 96       	adiw	r28, 0x07	; 7
 1da:	0f b6       	in	r0, 0x3f	; 63
 1dc:	f8 94       	cli
 1de:	de bf       	out	0x3e, r29	; 62
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	cd bf       	out	0x3d, r28	; 61
 1e4:	cf 91       	pop	r28
 1e6:	df 91       	pop	r29
 1e8:	08 95       	ret

000001ea <MCAL_Dio_SetPortDirection>:

Std_type MCAL_Dio_SetPortDirection(S_Dio *Dio_ConfigPort)
{
 1ea:	df 93       	push	r29
 1ec:	cf 93       	push	r28
 1ee:	00 d0       	rcall	.+0      	; 0x1f0 <MCAL_Dio_SetPortDirection+0x6>
 1f0:	00 d0       	rcall	.+0      	; 0x1f2 <MCAL_Dio_SetPortDirection+0x8>
 1f2:	0f 92       	push	r0
 1f4:	cd b7       	in	r28, 0x3d	; 61
 1f6:	de b7       	in	r29, 0x3e	; 62
 1f8:	9b 83       	std	Y+3, r25	; 0x03
 1fa:	8a 83       	std	Y+2, r24	; 0x02
	Std_type error = OK;
 1fc:	19 82       	std	Y+1, r1	; 0x01
	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Dio_ConfigPort->port_num >= DIO_CONFIGURED_PORTS)
 1fe:	ea 81       	ldd	r30, Y+2	; 0x02
 200:	fb 81       	ldd	r31, Y+3	; 0x03
 202:	80 81       	ld	r24, Z
 204:	84 30       	cpi	r24, 0x04	; 4
 206:	18 f0       	brcs	.+6      	; 0x20e <MCAL_Dio_SetPortDirection+0x24>
	{

		error = NOT_OK;
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	89 83       	std	Y+1, r24	; 0x01
 20c:	5d c0       	rjmp	.+186    	; 0x2c8 <MCAL_Dio_SetPortDirection+0xde>
	}
	else
	{
		switch(Dio_ConfigPort->port_num)
 20e:	ea 81       	ldd	r30, Y+2	; 0x02
 210:	fb 81       	ldd	r31, Y+3	; 0x03
 212:	80 81       	ld	r24, Z
 214:	28 2f       	mov	r18, r24
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	3d 83       	std	Y+5, r19	; 0x05
 21a:	2c 83       	std	Y+4, r18	; 0x04
 21c:	8c 81       	ldd	r24, Y+4	; 0x04
 21e:	9d 81       	ldd	r25, Y+5	; 0x05
 220:	81 30       	cpi	r24, 0x01	; 1
 222:	91 05       	cpc	r25, r1
 224:	29 f1       	breq	.+74     	; 0x270 <MCAL_Dio_SetPortDirection+0x86>
 226:	ec 81       	ldd	r30, Y+4	; 0x04
 228:	fd 81       	ldd	r31, Y+5	; 0x05
 22a:	e2 30       	cpi	r30, 0x02	; 2
 22c:	f1 05       	cpc	r31, r1
 22e:	34 f4       	brge	.+12     	; 0x23c <MCAL_Dio_SetPortDirection+0x52>
 230:	2c 81       	ldd	r18, Y+4	; 0x04
 232:	3d 81       	ldd	r19, Y+5	; 0x05
 234:	21 15       	cp	r18, r1
 236:	31 05       	cpc	r19, r1
 238:	61 f0       	breq	.+24     	; 0x252 <MCAL_Dio_SetPortDirection+0x68>
 23a:	46 c0       	rjmp	.+140    	; 0x2c8 <MCAL_Dio_SetPortDirection+0xde>
 23c:	8c 81       	ldd	r24, Y+4	; 0x04
 23e:	9d 81       	ldd	r25, Y+5	; 0x05
 240:	82 30       	cpi	r24, 0x02	; 2
 242:	91 05       	cpc	r25, r1
 244:	21 f1       	breq	.+72     	; 0x28e <MCAL_Dio_SetPortDirection+0xa4>
 246:	ec 81       	ldd	r30, Y+4	; 0x04
 248:	fd 81       	ldd	r31, Y+5	; 0x05
 24a:	e3 30       	cpi	r30, 0x03	; 3
 24c:	f1 05       	cpc	r31, r1
 24e:	71 f1       	breq	.+92     	; 0x2ac <MCAL_Dio_SetPortDirection+0xc2>
 250:	3b c0       	rjmp	.+118    	; 0x2c8 <MCAL_Dio_SetPortDirection+0xde>
		{
		case PORTA_ID:
			DIO_DDRA = Dio_ConfigPort->Direction;
 252:	2a e3       	ldi	r18, 0x3A	; 58
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	ea 81       	ldd	r30, Y+2	; 0x02
 258:	fb 81       	ldd	r31, Y+3	; 0x03
 25a:	82 81       	ldd	r24, Z+2	; 0x02
 25c:	88 2f       	mov	r24, r24
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	a0 e0       	ldi	r26, 0x00	; 0
 262:	b0 e0       	ldi	r27, 0x00	; 0
 264:	f9 01       	movw	r30, r18
 266:	80 83       	st	Z, r24
 268:	91 83       	std	Z+1, r25	; 0x01
 26a:	a2 83       	std	Z+2, r26	; 0x02
 26c:	b3 83       	std	Z+3, r27	; 0x03
 26e:	2c c0       	rjmp	.+88     	; 0x2c8 <MCAL_Dio_SetPortDirection+0xde>
			break;
		case PORTB_ID:
			DIO_DDRB = Dio_ConfigPort->Direction;
 270:	27 e3       	ldi	r18, 0x37	; 55
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	ea 81       	ldd	r30, Y+2	; 0x02
 276:	fb 81       	ldd	r31, Y+3	; 0x03
 278:	82 81       	ldd	r24, Z+2	; 0x02
 27a:	88 2f       	mov	r24, r24
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	a0 e0       	ldi	r26, 0x00	; 0
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	f9 01       	movw	r30, r18
 284:	80 83       	st	Z, r24
 286:	91 83       	std	Z+1, r25	; 0x01
 288:	a2 83       	std	Z+2, r26	; 0x02
 28a:	b3 83       	std	Z+3, r27	; 0x03
 28c:	1d c0       	rjmp	.+58     	; 0x2c8 <MCAL_Dio_SetPortDirection+0xde>
			break;
		case PORTC_ID:

			DIO_DDRC = Dio_ConfigPort->Direction;
 28e:	24 e3       	ldi	r18, 0x34	; 52
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	ea 81       	ldd	r30, Y+2	; 0x02
 294:	fb 81       	ldd	r31, Y+3	; 0x03
 296:	82 81       	ldd	r24, Z+2	; 0x02
 298:	88 2f       	mov	r24, r24
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	a0 e0       	ldi	r26, 0x00	; 0
 29e:	b0 e0       	ldi	r27, 0x00	; 0
 2a0:	f9 01       	movw	r30, r18
 2a2:	80 83       	st	Z, r24
 2a4:	91 83       	std	Z+1, r25	; 0x01
 2a6:	a2 83       	std	Z+2, r26	; 0x02
 2a8:	b3 83       	std	Z+3, r27	; 0x03
 2aa:	0e c0       	rjmp	.+28     	; 0x2c8 <MCAL_Dio_SetPortDirection+0xde>
			break;
		case PORTD_ID:
			DIO_DDRD = Dio_ConfigPort->Direction;
 2ac:	21 e3       	ldi	r18, 0x31	; 49
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	ea 81       	ldd	r30, Y+2	; 0x02
 2b2:	fb 81       	ldd	r31, Y+3	; 0x03
 2b4:	82 81       	ldd	r24, Z+2	; 0x02
 2b6:	88 2f       	mov	r24, r24
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	a0 e0       	ldi	r26, 0x00	; 0
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
 2be:	f9 01       	movw	r30, r18
 2c0:	80 83       	st	Z, r24
 2c2:	91 83       	std	Z+1, r25	; 0x01
 2c4:	a2 83       	std	Z+2, r26	; 0x02
 2c6:	b3 83       	std	Z+3, r27	; 0x03
			break;

		}
	}

	return error;
 2c8:	89 81       	ldd	r24, Y+1	; 0x01
}
 2ca:	0f 90       	pop	r0
 2cc:	0f 90       	pop	r0
 2ce:	0f 90       	pop	r0
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	cf 91       	pop	r28
 2d6:	df 91       	pop	r29
 2d8:	08 95       	ret

000002da <MCAL_Dio_SetPinDirection>:

Std_type MCAL_Dio_SetPinDirection(S_Dio *Dio_ConfigPin)
{
 2da:	df 93       	push	r29
 2dc:	cf 93       	push	r28
 2de:	cd b7       	in	r28, 0x3d	; 61
 2e0:	de b7       	in	r29, 0x3e	; 62
 2e2:	27 97       	sbiw	r28, 0x07	; 7
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	f8 94       	cli
 2e8:	de bf       	out	0x3e, r29	; 62
 2ea:	0f be       	out	0x3f, r0	; 63
 2ec:	cd bf       	out	0x3d, r28	; 61
 2ee:	9d 83       	std	Y+5, r25	; 0x05
 2f0:	8c 83       	std	Y+4, r24	; 0x04
	Std_type error = OK;
 2f2:	1b 82       	std	Y+3, r1	; 0x03
	if(DIO_STATUS_ERROR == NOT_OK)
	{

		error = NOT_OK;
	}
	else if(Dio_ConfigPin->port_num >= DIO_CONFIGURED_PORTS)
 2f4:	ec 81       	ldd	r30, Y+4	; 0x04
 2f6:	fd 81       	ldd	r31, Y+5	; 0x05
 2f8:	80 81       	ld	r24, Z
 2fa:	84 30       	cpi	r24, 0x04	; 4
 2fc:	18 f0       	brcs	.+6      	; 0x304 <MCAL_Dio_SetPinDirection+0x2a>
	{

		error = NOT_OK;
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	8b 83       	std	Y+3, r24	; 0x03
 302:	95 c0       	rjmp	.+298    	; 0x42e <MCAL_Dio_SetPinDirection+0x154>
	}
	else
	{
		Mask2 = ((Dio_ConfigPin->pin_num) & (Dio_ConfigPin->Direction));
 304:	ec 81       	ldd	r30, Y+4	; 0x04
 306:	fd 81       	ldd	r31, Y+5	; 0x05
 308:	91 81       	ldd	r25, Z+1	; 0x01
 30a:	ec 81       	ldd	r30, Y+4	; 0x04
 30c:	fd 81       	ldd	r31, Y+5	; 0x05
 30e:	82 81       	ldd	r24, Z+2	; 0x02
 310:	89 23       	and	r24, r25
 312:	89 83       	std	Y+1, r24	; 0x01
		switch(Dio_ConfigPin->port_num)
 314:	ec 81       	ldd	r30, Y+4	; 0x04
 316:	fd 81       	ldd	r31, Y+5	; 0x05
 318:	80 81       	ld	r24, Z
 31a:	28 2f       	mov	r18, r24
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	3f 83       	std	Y+7, r19	; 0x07
 320:	2e 83       	std	Y+6, r18	; 0x06
 322:	8e 81       	ldd	r24, Y+6	; 0x06
 324:	9f 81       	ldd	r25, Y+7	; 0x07
 326:	81 30       	cpi	r24, 0x01	; 1
 328:	91 05       	cpc	r25, r1
 32a:	89 f1       	breq	.+98     	; 0x38e <MCAL_Dio_SetPinDirection+0xb4>
 32c:	2e 81       	ldd	r18, Y+6	; 0x06
 32e:	3f 81       	ldd	r19, Y+7	; 0x07
 330:	22 30       	cpi	r18, 0x02	; 2
 332:	31 05       	cpc	r19, r1
 334:	2c f4       	brge	.+10     	; 0x340 <MCAL_Dio_SetPinDirection+0x66>
 336:	8e 81       	ldd	r24, Y+6	; 0x06
 338:	9f 81       	ldd	r25, Y+7	; 0x07
 33a:	00 97       	sbiw	r24, 0x00	; 0
 33c:	69 f0       	breq	.+26     	; 0x358 <MCAL_Dio_SetPinDirection+0x7e>
 33e:	77 c0       	rjmp	.+238    	; 0x42e <MCAL_Dio_SetPinDirection+0x154>
 340:	2e 81       	ldd	r18, Y+6	; 0x06
 342:	3f 81       	ldd	r19, Y+7	; 0x07
 344:	22 30       	cpi	r18, 0x02	; 2
 346:	31 05       	cpc	r19, r1
 348:	e9 f1       	breq	.+122    	; 0x3c4 <MCAL_Dio_SetPinDirection+0xea>
 34a:	8e 81       	ldd	r24, Y+6	; 0x06
 34c:	9f 81       	ldd	r25, Y+7	; 0x07
 34e:	83 30       	cpi	r24, 0x03	; 3
 350:	91 05       	cpc	r25, r1
 352:	09 f4       	brne	.+2      	; 0x356 <MCAL_Dio_SetPinDirection+0x7c>
 354:	52 c0       	rjmp	.+164    	; 0x3fa <MCAL_Dio_SetPinDirection+0x120>
 356:	6b c0       	rjmp	.+214    	; 0x42e <MCAL_Dio_SetPinDirection+0x154>
		{
		case PORTA_ID:
			Mask1 = ((DIO_DDRA) & (~(Dio_ConfigPin->pin_num)));
 358:	ea e3       	ldi	r30, 0x3A	; 58
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	91 81       	ldd	r25, Z+1	; 0x01
 360:	a2 81       	ldd	r26, Z+2	; 0x02
 362:	b3 81       	ldd	r27, Z+3	; 0x03
 364:	98 2f       	mov	r25, r24
 366:	ec 81       	ldd	r30, Y+4	; 0x04
 368:	fd 81       	ldd	r31, Y+5	; 0x05
 36a:	81 81       	ldd	r24, Z+1	; 0x01
 36c:	80 95       	com	r24
 36e:	89 23       	and	r24, r25
 370:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRA = Mask1 | Mask2;
 372:	ea e3       	ldi	r30, 0x3A	; 58
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	9a 81       	ldd	r25, Y+2	; 0x02
 378:	89 81       	ldd	r24, Y+1	; 0x01
 37a:	89 2b       	or	r24, r25
 37c:	88 2f       	mov	r24, r24
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	a0 e0       	ldi	r26, 0x00	; 0
 382:	b0 e0       	ldi	r27, 0x00	; 0
 384:	80 83       	st	Z, r24
 386:	91 83       	std	Z+1, r25	; 0x01
 388:	a2 83       	std	Z+2, r26	; 0x02
 38a:	b3 83       	std	Z+3, r27	; 0x03
 38c:	50 c0       	rjmp	.+160    	; 0x42e <MCAL_Dio_SetPinDirection+0x154>
			break;
		case PORTB_ID:
			Mask1 = ((DIO_DDRB) & (~(Dio_ConfigPin->pin_num)));
 38e:	e7 e3       	ldi	r30, 0x37	; 55
 390:	f0 e0       	ldi	r31, 0x00	; 0
 392:	80 81       	ld	r24, Z
 394:	91 81       	ldd	r25, Z+1	; 0x01
 396:	a2 81       	ldd	r26, Z+2	; 0x02
 398:	b3 81       	ldd	r27, Z+3	; 0x03
 39a:	98 2f       	mov	r25, r24
 39c:	ec 81       	ldd	r30, Y+4	; 0x04
 39e:	fd 81       	ldd	r31, Y+5	; 0x05
 3a0:	81 81       	ldd	r24, Z+1	; 0x01
 3a2:	80 95       	com	r24
 3a4:	89 23       	and	r24, r25
 3a6:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRB = Mask1 | Mask2;
 3a8:	e7 e3       	ldi	r30, 0x37	; 55
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	9a 81       	ldd	r25, Y+2	; 0x02
 3ae:	89 81       	ldd	r24, Y+1	; 0x01
 3b0:	89 2b       	or	r24, r25
 3b2:	88 2f       	mov	r24, r24
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	a0 e0       	ldi	r26, 0x00	; 0
 3b8:	b0 e0       	ldi	r27, 0x00	; 0
 3ba:	80 83       	st	Z, r24
 3bc:	91 83       	std	Z+1, r25	; 0x01
 3be:	a2 83       	std	Z+2, r26	; 0x02
 3c0:	b3 83       	std	Z+3, r27	; 0x03
 3c2:	35 c0       	rjmp	.+106    	; 0x42e <MCAL_Dio_SetPinDirection+0x154>
			break;
		case PORTC_ID:
			Mask1 = ((DIO_DDRC) & (~(Dio_ConfigPin->pin_num)));
 3c4:	e4 e3       	ldi	r30, 0x34	; 52
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	80 81       	ld	r24, Z
 3ca:	91 81       	ldd	r25, Z+1	; 0x01
 3cc:	a2 81       	ldd	r26, Z+2	; 0x02
 3ce:	b3 81       	ldd	r27, Z+3	; 0x03
 3d0:	98 2f       	mov	r25, r24
 3d2:	ec 81       	ldd	r30, Y+4	; 0x04
 3d4:	fd 81       	ldd	r31, Y+5	; 0x05
 3d6:	81 81       	ldd	r24, Z+1	; 0x01
 3d8:	80 95       	com	r24
 3da:	89 23       	and	r24, r25
 3dc:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRC = Mask1 | Mask2;
 3de:	e4 e3       	ldi	r30, 0x34	; 52
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	9a 81       	ldd	r25, Y+2	; 0x02
 3e4:	89 81       	ldd	r24, Y+1	; 0x01
 3e6:	89 2b       	or	r24, r25
 3e8:	88 2f       	mov	r24, r24
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	a0 e0       	ldi	r26, 0x00	; 0
 3ee:	b0 e0       	ldi	r27, 0x00	; 0
 3f0:	80 83       	st	Z, r24
 3f2:	91 83       	std	Z+1, r25	; 0x01
 3f4:	a2 83       	std	Z+2, r26	; 0x02
 3f6:	b3 83       	std	Z+3, r27	; 0x03
 3f8:	1a c0       	rjmp	.+52     	; 0x42e <MCAL_Dio_SetPinDirection+0x154>
			break;
		case PORTD_ID:
			Mask1 = ((DIO_DDRD) & (~(Dio_ConfigPin->pin_num)));
 3fa:	e1 e3       	ldi	r30, 0x31	; 49
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	91 81       	ldd	r25, Z+1	; 0x01
 402:	a2 81       	ldd	r26, Z+2	; 0x02
 404:	b3 81       	ldd	r27, Z+3	; 0x03
 406:	98 2f       	mov	r25, r24
 408:	ec 81       	ldd	r30, Y+4	; 0x04
 40a:	fd 81       	ldd	r31, Y+5	; 0x05
 40c:	81 81       	ldd	r24, Z+1	; 0x01
 40e:	80 95       	com	r24
 410:	89 23       	and	r24, r25
 412:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRD = Mask1 | Mask2;
 414:	e1 e3       	ldi	r30, 0x31	; 49
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	9a 81       	ldd	r25, Y+2	; 0x02
 41a:	89 81       	ldd	r24, Y+1	; 0x01
 41c:	89 2b       	or	r24, r25
 41e:	88 2f       	mov	r24, r24
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	a0 e0       	ldi	r26, 0x00	; 0
 424:	b0 e0       	ldi	r27, 0x00	; 0
 426:	80 83       	st	Z, r24
 428:	91 83       	std	Z+1, r25	; 0x01
 42a:	a2 83       	std	Z+2, r26	; 0x02
 42c:	b3 83       	std	Z+3, r27	; 0x03
			break;

		}
	}

	return error;
 42e:	8b 81       	ldd	r24, Y+3	; 0x03

}
 430:	27 96       	adiw	r28, 0x07	; 7
 432:	0f b6       	in	r0, 0x3f	; 63
 434:	f8 94       	cli
 436:	de bf       	out	0x3e, r29	; 62
 438:	0f be       	out	0x3f, r0	; 63
 43a:	cd bf       	out	0x3d, r28	; 61
 43c:	cf 91       	pop	r28
 43e:	df 91       	pop	r29
 440:	08 95       	ret

00000442 <MCAL_Dio_ReadPort>:


Std_type MCAL_Dio_ReadPort(E_DioPort Port_Num,u8PortValue Port_Value)
{
 442:	df 93       	push	r29
 444:	cf 93       	push	r28
 446:	00 d0       	rcall	.+0      	; 0x448 <MCAL_Dio_ReadPort+0x6>
 448:	00 d0       	rcall	.+0      	; 0x44a <MCAL_Dio_ReadPort+0x8>
 44a:	0f 92       	push	r0
 44c:	cd b7       	in	r28, 0x3d	; 61
 44e:	de b7       	in	r29, 0x3e	; 62
 450:	8a 83       	std	Y+2, r24	; 0x02
 452:	6b 83       	std	Y+3, r22	; 0x03
	Std_type error = OK;
 454:	19 82       	std	Y+1, r1	; 0x01
	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Port_Num >= DIO_CONFIGURED_PORTS)
 456:	8a 81       	ldd	r24, Y+2	; 0x02
 458:	84 30       	cpi	r24, 0x04	; 4
 45a:	18 f0       	brcs	.+6      	; 0x462 <MCAL_Dio_ReadPort+0x20>
	{

		error = NOT_OK;
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	89 83       	std	Y+1, r24	; 0x01
 460:	3e c0       	rjmp	.+124    	; 0x4de <MCAL_Dio_ReadPort+0x9c>
	}
	else
	{
		switch (Port_Num)
 462:	8a 81       	ldd	r24, Y+2	; 0x02
 464:	28 2f       	mov	r18, r24
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	3d 83       	std	Y+5, r19	; 0x05
 46a:	2c 83       	std	Y+4, r18	; 0x04
 46c:	8c 81       	ldd	r24, Y+4	; 0x04
 46e:	9d 81       	ldd	r25, Y+5	; 0x05
 470:	81 30       	cpi	r24, 0x01	; 1
 472:	91 05       	cpc	r25, r1
 474:	e9 f0       	breq	.+58     	; 0x4b0 <MCAL_Dio_ReadPort+0x6e>
 476:	2c 81       	ldd	r18, Y+4	; 0x04
 478:	3d 81       	ldd	r19, Y+5	; 0x05
 47a:	22 30       	cpi	r18, 0x02	; 2
 47c:	31 05       	cpc	r19, r1
 47e:	2c f4       	brge	.+10     	; 0x48a <MCAL_Dio_ReadPort+0x48>
 480:	8c 81       	ldd	r24, Y+4	; 0x04
 482:	9d 81       	ldd	r25, Y+5	; 0x05
 484:	00 97       	sbiw	r24, 0x00	; 0
 486:	61 f0       	breq	.+24     	; 0x4a0 <MCAL_Dio_ReadPort+0x5e>
 488:	2a c0       	rjmp	.+84     	; 0x4de <MCAL_Dio_ReadPort+0x9c>
 48a:	2c 81       	ldd	r18, Y+4	; 0x04
 48c:	3d 81       	ldd	r19, Y+5	; 0x05
 48e:	22 30       	cpi	r18, 0x02	; 2
 490:	31 05       	cpc	r19, r1
 492:	b1 f0       	breq	.+44     	; 0x4c0 <MCAL_Dio_ReadPort+0x7e>
 494:	8c 81       	ldd	r24, Y+4	; 0x04
 496:	9d 81       	ldd	r25, Y+5	; 0x05
 498:	83 30       	cpi	r24, 0x03	; 3
 49a:	91 05       	cpc	r25, r1
 49c:	c9 f0       	breq	.+50     	; 0x4d0 <MCAL_Dio_ReadPort+0x8e>
 49e:	1f c0       	rjmp	.+62     	; 0x4de <MCAL_Dio_ReadPort+0x9c>
		{
		case PORTA_ID:
			Port_Value = DIO_PINA;
 4a0:	e9 e3       	ldi	r30, 0x39	; 57
 4a2:	f0 e0       	ldi	r31, 0x00	; 0
 4a4:	80 81       	ld	r24, Z
 4a6:	91 81       	ldd	r25, Z+1	; 0x01
 4a8:	a2 81       	ldd	r26, Z+2	; 0x02
 4aa:	b3 81       	ldd	r27, Z+3	; 0x03
 4ac:	8b 83       	std	Y+3, r24	; 0x03
 4ae:	17 c0       	rjmp	.+46     	; 0x4de <MCAL_Dio_ReadPort+0x9c>
			break;
		case PORTB_ID:
			Port_Value = DIO_PINB;
 4b0:	e6 e3       	ldi	r30, 0x36	; 54
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	80 81       	ld	r24, Z
 4b6:	91 81       	ldd	r25, Z+1	; 0x01
 4b8:	a2 81       	ldd	r26, Z+2	; 0x02
 4ba:	b3 81       	ldd	r27, Z+3	; 0x03
 4bc:	8b 83       	std	Y+3, r24	; 0x03
 4be:	0f c0       	rjmp	.+30     	; 0x4de <MCAL_Dio_ReadPort+0x9c>
			break;
		case PORTC_ID:
			Port_Value = DIO_PINC;
 4c0:	e3 e3       	ldi	r30, 0x33	; 51
 4c2:	f0 e0       	ldi	r31, 0x00	; 0
 4c4:	80 81       	ld	r24, Z
 4c6:	91 81       	ldd	r25, Z+1	; 0x01
 4c8:	a2 81       	ldd	r26, Z+2	; 0x02
 4ca:	b3 81       	ldd	r27, Z+3	; 0x03
 4cc:	8b 83       	std	Y+3, r24	; 0x03
 4ce:	07 c0       	rjmp	.+14     	; 0x4de <MCAL_Dio_ReadPort+0x9c>
			break;
		case PORTD_ID:
			Port_Value = DIO_PIND;
 4d0:	e0 e3       	ldi	r30, 0x30	; 48
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	80 81       	ld	r24, Z
 4d6:	91 81       	ldd	r25, Z+1	; 0x01
 4d8:	a2 81       	ldd	r26, Z+2	; 0x02
 4da:	b3 81       	ldd	r27, Z+3	; 0x03
 4dc:	8b 83       	std	Y+3, r24	; 0x03
			break;

		}
	}
	return error;
 4de:	89 81       	ldd	r24, Y+1	; 0x01
}
 4e0:	0f 90       	pop	r0
 4e2:	0f 90       	pop	r0
 4e4:	0f 90       	pop	r0
 4e6:	0f 90       	pop	r0
 4e8:	0f 90       	pop	r0
 4ea:	cf 91       	pop	r28
 4ec:	df 91       	pop	r29
 4ee:	08 95       	ret

000004f0 <MCAL_Dio_ReadPin>:

Std_type MCAL_Dio_ReadPin(E_DioPort Port_Num,E_DioPin Pin_Num,u8PinValue Pin_Value)
{
 4f0:	df 93       	push	r29
 4f2:	cf 93       	push	r28
 4f4:	00 d0       	rcall	.+0      	; 0x4f6 <MCAL_Dio_ReadPin+0x6>
 4f6:	00 d0       	rcall	.+0      	; 0x4f8 <MCAL_Dio_ReadPin+0x8>
 4f8:	00 d0       	rcall	.+0      	; 0x4fa <MCAL_Dio_ReadPin+0xa>
 4fa:	cd b7       	in	r28, 0x3d	; 61
 4fc:	de b7       	in	r29, 0x3e	; 62
 4fe:	8a 83       	std	Y+2, r24	; 0x02
 500:	6b 83       	std	Y+3, r22	; 0x03
 502:	4c 83       	std	Y+4, r20	; 0x04
	Std_type error = OK;
 504:	19 82       	std	Y+1, r1	; 0x01

	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Port_Num >= DIO_CONFIGURED_PORTS)
 506:	8a 81       	ldd	r24, Y+2	; 0x02
 508:	84 30       	cpi	r24, 0x04	; 4
 50a:	18 f0       	brcs	.+6      	; 0x512 <MCAL_Dio_ReadPin+0x22>
	{

		error = NOT_OK;
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	89 83       	std	Y+1, r24	; 0x01
 510:	a8 c0       	rjmp	.+336    	; 0x662 <MCAL_Dio_ReadPin+0x172>

	}
	else
	{

		switch(Port_Num)
 512:	8a 81       	ldd	r24, Y+2	; 0x02
 514:	28 2f       	mov	r18, r24
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	3e 83       	std	Y+6, r19	; 0x06
 51a:	2d 83       	std	Y+5, r18	; 0x05
 51c:	8d 81       	ldd	r24, Y+5	; 0x05
 51e:	9e 81       	ldd	r25, Y+6	; 0x06
 520:	81 30       	cpi	r24, 0x01	; 1
 522:	91 05       	cpc	r25, r1
 524:	c9 f1       	breq	.+114    	; 0x598 <MCAL_Dio_ReadPin+0xa8>
 526:	2d 81       	ldd	r18, Y+5	; 0x05
 528:	3e 81       	ldd	r19, Y+6	; 0x06
 52a:	22 30       	cpi	r18, 0x02	; 2
 52c:	31 05       	cpc	r19, r1
 52e:	2c f4       	brge	.+10     	; 0x53a <MCAL_Dio_ReadPin+0x4a>
 530:	8d 81       	ldd	r24, Y+5	; 0x05
 532:	9e 81       	ldd	r25, Y+6	; 0x06
 534:	00 97       	sbiw	r24, 0x00	; 0
 536:	71 f0       	breq	.+28     	; 0x554 <MCAL_Dio_ReadPin+0x64>
 538:	94 c0       	rjmp	.+296    	; 0x662 <MCAL_Dio_ReadPin+0x172>
 53a:	2d 81       	ldd	r18, Y+5	; 0x05
 53c:	3e 81       	ldd	r19, Y+6	; 0x06
 53e:	22 30       	cpi	r18, 0x02	; 2
 540:	31 05       	cpc	r19, r1
 542:	09 f4       	brne	.+2      	; 0x546 <MCAL_Dio_ReadPin+0x56>
 544:	4b c0       	rjmp	.+150    	; 0x5dc <MCAL_Dio_ReadPin+0xec>
 546:	8d 81       	ldd	r24, Y+5	; 0x05
 548:	9e 81       	ldd	r25, Y+6	; 0x06
 54a:	83 30       	cpi	r24, 0x03	; 3
 54c:	91 05       	cpc	r25, r1
 54e:	09 f4       	brne	.+2      	; 0x552 <MCAL_Dio_ReadPin+0x62>
 550:	67 c0       	rjmp	.+206    	; 0x620 <MCAL_Dio_ReadPin+0x130>
 552:	87 c0       	rjmp	.+270    	; 0x662 <MCAL_Dio_ReadPin+0x172>
		{
		case PORTA_ID:
			if(BIT_IS_SET(DIO_PINA,Pin_Num))
 554:	e9 e3       	ldi	r30, 0x39	; 57
 556:	f0 e0       	ldi	r31, 0x00	; 0
 558:	40 81       	ld	r20, Z
 55a:	51 81       	ldd	r21, Z+1	; 0x01
 55c:	62 81       	ldd	r22, Z+2	; 0x02
 55e:	73 81       	ldd	r23, Z+3	; 0x03
 560:	8b 81       	ldd	r24, Y+3	; 0x03
 562:	28 2f       	mov	r18, r24
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	02 2e       	mov	r0, r18
 56c:	02 c0       	rjmp	.+4      	; 0x572 <MCAL_Dio_ReadPin+0x82>
 56e:	88 0f       	add	r24, r24
 570:	99 1f       	adc	r25, r25
 572:	0a 94       	dec	r0
 574:	e2 f7       	brpl	.-8      	; 0x56e <MCAL_Dio_ReadPin+0x7e>
 576:	aa 27       	eor	r26, r26
 578:	97 fd       	sbrc	r25, 7
 57a:	a0 95       	com	r26
 57c:	ba 2f       	mov	r27, r26
 57e:	84 23       	and	r24, r20
 580:	95 23       	and	r25, r21
 582:	a6 23       	and	r26, r22
 584:	b7 23       	and	r27, r23
 586:	00 97       	sbiw	r24, 0x00	; 0
 588:	a1 05       	cpc	r26, r1
 58a:	b1 05       	cpc	r27, r1
 58c:	19 f0       	breq	.+6      	; 0x594 <MCAL_Dio_ReadPin+0xa4>
			{
				Pin_Value =PIN_HIGH;
 58e:	8f ef       	ldi	r24, 0xFF	; 255
 590:	8c 83       	std	Y+4, r24	; 0x04
 592:	67 c0       	rjmp	.+206    	; 0x662 <MCAL_Dio_ReadPin+0x172>
			}
			else
			{
				Pin_Value =PIN_LOW;
 594:	1c 82       	std	Y+4, r1	; 0x04
 596:	65 c0       	rjmp	.+202    	; 0x662 <MCAL_Dio_ReadPin+0x172>
			}
			break;
		case PORTB_ID:
			if(BIT_IS_SET(DIO_PINB,Pin_Num))
 598:	e6 e3       	ldi	r30, 0x36	; 54
 59a:	f0 e0       	ldi	r31, 0x00	; 0
 59c:	40 81       	ld	r20, Z
 59e:	51 81       	ldd	r21, Z+1	; 0x01
 5a0:	62 81       	ldd	r22, Z+2	; 0x02
 5a2:	73 81       	ldd	r23, Z+3	; 0x03
 5a4:	8b 81       	ldd	r24, Y+3	; 0x03
 5a6:	28 2f       	mov	r18, r24
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	02 2e       	mov	r0, r18
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <MCAL_Dio_ReadPin+0xc6>
 5b2:	88 0f       	add	r24, r24
 5b4:	99 1f       	adc	r25, r25
 5b6:	0a 94       	dec	r0
 5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <MCAL_Dio_ReadPin+0xc2>
 5ba:	aa 27       	eor	r26, r26
 5bc:	97 fd       	sbrc	r25, 7
 5be:	a0 95       	com	r26
 5c0:	ba 2f       	mov	r27, r26
 5c2:	84 23       	and	r24, r20
 5c4:	95 23       	and	r25, r21
 5c6:	a6 23       	and	r26, r22
 5c8:	b7 23       	and	r27, r23
 5ca:	00 97       	sbiw	r24, 0x00	; 0
 5cc:	a1 05       	cpc	r26, r1
 5ce:	b1 05       	cpc	r27, r1
 5d0:	19 f0       	breq	.+6      	; 0x5d8 <MCAL_Dio_ReadPin+0xe8>
			{
				Pin_Value = PIN_HIGH;
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	8c 83       	std	Y+4, r24	; 0x04
 5d6:	45 c0       	rjmp	.+138    	; 0x662 <MCAL_Dio_ReadPin+0x172>
			}
			else
			{
				Pin_Value = PIN_LOW;
 5d8:	1c 82       	std	Y+4, r1	; 0x04
 5da:	43 c0       	rjmp	.+134    	; 0x662 <MCAL_Dio_ReadPin+0x172>
			}
			break;
		case PORTC_ID:
			if(BIT_IS_SET(DIO_PINC,Pin_Num))
 5dc:	e3 e3       	ldi	r30, 0x33	; 51
 5de:	f0 e0       	ldi	r31, 0x00	; 0
 5e0:	40 81       	ld	r20, Z
 5e2:	51 81       	ldd	r21, Z+1	; 0x01
 5e4:	62 81       	ldd	r22, Z+2	; 0x02
 5e6:	73 81       	ldd	r23, Z+3	; 0x03
 5e8:	8b 81       	ldd	r24, Y+3	; 0x03
 5ea:	28 2f       	mov	r18, r24
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	81 e0       	ldi	r24, 0x01	; 1
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	02 2e       	mov	r0, r18
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <MCAL_Dio_ReadPin+0x10a>
 5f6:	88 0f       	add	r24, r24
 5f8:	99 1f       	adc	r25, r25
 5fa:	0a 94       	dec	r0
 5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <MCAL_Dio_ReadPin+0x106>
 5fe:	aa 27       	eor	r26, r26
 600:	97 fd       	sbrc	r25, 7
 602:	a0 95       	com	r26
 604:	ba 2f       	mov	r27, r26
 606:	84 23       	and	r24, r20
 608:	95 23       	and	r25, r21
 60a:	a6 23       	and	r26, r22
 60c:	b7 23       	and	r27, r23
 60e:	00 97       	sbiw	r24, 0x00	; 0
 610:	a1 05       	cpc	r26, r1
 612:	b1 05       	cpc	r27, r1
 614:	19 f0       	breq	.+6      	; 0x61c <MCAL_Dio_ReadPin+0x12c>
			{
				Pin_Value =PIN_HIGH;
 616:	8f ef       	ldi	r24, 0xFF	; 255
 618:	8c 83       	std	Y+4, r24	; 0x04
 61a:	23 c0       	rjmp	.+70     	; 0x662 <MCAL_Dio_ReadPin+0x172>
			}
			else
			{
				Pin_Value =PIN_LOW;
 61c:	1c 82       	std	Y+4, r1	; 0x04
 61e:	21 c0       	rjmp	.+66     	; 0x662 <MCAL_Dio_ReadPin+0x172>
			}
			break;
		case PORTD_ID:
			if(BIT_IS_SET(DIO_PORTD ,Pin_Num))
 620:	e2 e3       	ldi	r30, 0x32	; 50
 622:	f0 e0       	ldi	r31, 0x00	; 0
 624:	40 81       	ld	r20, Z
 626:	51 81       	ldd	r21, Z+1	; 0x01
 628:	62 81       	ldd	r22, Z+2	; 0x02
 62a:	73 81       	ldd	r23, Z+3	; 0x03
 62c:	8b 81       	ldd	r24, Y+3	; 0x03
 62e:	28 2f       	mov	r18, r24
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	02 2e       	mov	r0, r18
 638:	02 c0       	rjmp	.+4      	; 0x63e <MCAL_Dio_ReadPin+0x14e>
 63a:	88 0f       	add	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	0a 94       	dec	r0
 640:	e2 f7       	brpl	.-8      	; 0x63a <MCAL_Dio_ReadPin+0x14a>
 642:	aa 27       	eor	r26, r26
 644:	97 fd       	sbrc	r25, 7
 646:	a0 95       	com	r26
 648:	ba 2f       	mov	r27, r26
 64a:	84 23       	and	r24, r20
 64c:	95 23       	and	r25, r21
 64e:	a6 23       	and	r26, r22
 650:	b7 23       	and	r27, r23
 652:	00 97       	sbiw	r24, 0x00	; 0
 654:	a1 05       	cpc	r26, r1
 656:	b1 05       	cpc	r27, r1
 658:	19 f0       	breq	.+6      	; 0x660 <MCAL_Dio_ReadPin+0x170>
			{
				Pin_Value =PIN_HIGH;
 65a:	8f ef       	ldi	r24, 0xFF	; 255
 65c:	8c 83       	std	Y+4, r24	; 0x04
 65e:	01 c0       	rjmp	.+2      	; 0x662 <MCAL_Dio_ReadPin+0x172>
			}
			else
			{
				Pin_Value =PIN_LOW;
 660:	1c 82       	std	Y+4, r1	; 0x04
			}

			break;
		}
	}
	return error;
 662:	89 81       	ldd	r24, Y+1	; 0x01
}
 664:	26 96       	adiw	r28, 0x06	; 6
 666:	0f b6       	in	r0, 0x3f	; 63
 668:	f8 94       	cli
 66a:	de bf       	out	0x3e, r29	; 62
 66c:	0f be       	out	0x3f, r0	; 63
 66e:	cd bf       	out	0x3d, r28	; 61
 670:	cf 91       	pop	r28
 672:	df 91       	pop	r29
 674:	08 95       	ret

00000676 <MCAL_Dio_WritePort>:


Std_type MCAL_Dio_WritePort(E_DioPort Port_Num,u8PortValue Port_Value)
{
 676:	df 93       	push	r29
 678:	cf 93       	push	r28
 67a:	00 d0       	rcall	.+0      	; 0x67c <MCAL_Dio_WritePort+0x6>
 67c:	00 d0       	rcall	.+0      	; 0x67e <MCAL_Dio_WritePort+0x8>
 67e:	0f 92       	push	r0
 680:	cd b7       	in	r28, 0x3d	; 61
 682:	de b7       	in	r29, 0x3e	; 62
 684:	8a 83       	std	Y+2, r24	; 0x02
 686:	6b 83       	std	Y+3, r22	; 0x03
	Std_type error = OK;
 688:	19 82       	std	Y+1, r1	; 0x01

	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Port_Num >= DIO_CONFIGURED_PORTS)
 68a:	8a 81       	ldd	r24, Y+2	; 0x02
 68c:	84 30       	cpi	r24, 0x04	; 4
 68e:	18 f0       	brcs	.+6      	; 0x696 <MCAL_Dio_WritePort+0x20>
	{

		error = NOT_OK;
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	89 83       	std	Y+1, r24	; 0x01
 694:	4e c0       	rjmp	.+156    	; 0x732 <MCAL_Dio_WritePort+0xbc>
	}
	else
	{
		switch (Port_Num)
 696:	8a 81       	ldd	r24, Y+2	; 0x02
 698:	28 2f       	mov	r18, r24
 69a:	30 e0       	ldi	r19, 0x00	; 0
 69c:	3d 83       	std	Y+5, r19	; 0x05
 69e:	2c 83       	std	Y+4, r18	; 0x04
 6a0:	8c 81       	ldd	r24, Y+4	; 0x04
 6a2:	9d 81       	ldd	r25, Y+5	; 0x05
 6a4:	81 30       	cpi	r24, 0x01	; 1
 6a6:	91 05       	cpc	r25, r1
 6a8:	09 f1       	breq	.+66     	; 0x6ec <MCAL_Dio_WritePort+0x76>
 6aa:	2c 81       	ldd	r18, Y+4	; 0x04
 6ac:	3d 81       	ldd	r19, Y+5	; 0x05
 6ae:	22 30       	cpi	r18, 0x02	; 2
 6b0:	31 05       	cpc	r19, r1
 6b2:	2c f4       	brge	.+10     	; 0x6be <MCAL_Dio_WritePort+0x48>
 6b4:	8c 81       	ldd	r24, Y+4	; 0x04
 6b6:	9d 81       	ldd	r25, Y+5	; 0x05
 6b8:	00 97       	sbiw	r24, 0x00	; 0
 6ba:	61 f0       	breq	.+24     	; 0x6d4 <MCAL_Dio_WritePort+0x5e>
 6bc:	3a c0       	rjmp	.+116    	; 0x732 <MCAL_Dio_WritePort+0xbc>
 6be:	2c 81       	ldd	r18, Y+4	; 0x04
 6c0:	3d 81       	ldd	r19, Y+5	; 0x05
 6c2:	22 30       	cpi	r18, 0x02	; 2
 6c4:	31 05       	cpc	r19, r1
 6c6:	f1 f0       	breq	.+60     	; 0x704 <MCAL_Dio_WritePort+0x8e>
 6c8:	8c 81       	ldd	r24, Y+4	; 0x04
 6ca:	9d 81       	ldd	r25, Y+5	; 0x05
 6cc:	83 30       	cpi	r24, 0x03	; 3
 6ce:	91 05       	cpc	r25, r1
 6d0:	29 f1       	breq	.+74     	; 0x71c <MCAL_Dio_WritePort+0xa6>
 6d2:	2f c0       	rjmp	.+94     	; 0x732 <MCAL_Dio_WritePort+0xbc>
		{
		case PORTA_ID:
			DIO_PORTA = Port_Value;
 6d4:	eb e3       	ldi	r30, 0x3B	; 59
 6d6:	f0 e0       	ldi	r31, 0x00	; 0
 6d8:	8b 81       	ldd	r24, Y+3	; 0x03
 6da:	88 2f       	mov	r24, r24
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	a0 e0       	ldi	r26, 0x00	; 0
 6e0:	b0 e0       	ldi	r27, 0x00	; 0
 6e2:	80 83       	st	Z, r24
 6e4:	91 83       	std	Z+1, r25	; 0x01
 6e6:	a2 83       	std	Z+2, r26	; 0x02
 6e8:	b3 83       	std	Z+3, r27	; 0x03
 6ea:	23 c0       	rjmp	.+70     	; 0x732 <MCAL_Dio_WritePort+0xbc>
			break;
		case PORTB_ID:
			DIO_PORTB = Port_Value;
 6ec:	e8 e3       	ldi	r30, 0x38	; 56
 6ee:	f0 e0       	ldi	r31, 0x00	; 0
 6f0:	8b 81       	ldd	r24, Y+3	; 0x03
 6f2:	88 2f       	mov	r24, r24
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	a0 e0       	ldi	r26, 0x00	; 0
 6f8:	b0 e0       	ldi	r27, 0x00	; 0
 6fa:	80 83       	st	Z, r24
 6fc:	91 83       	std	Z+1, r25	; 0x01
 6fe:	a2 83       	std	Z+2, r26	; 0x02
 700:	b3 83       	std	Z+3, r27	; 0x03
 702:	17 c0       	rjmp	.+46     	; 0x732 <MCAL_Dio_WritePort+0xbc>
			break;
		case PORTC_ID:
			DIO_PORTC = Port_Value;
 704:	e5 e3       	ldi	r30, 0x35	; 53
 706:	f0 e0       	ldi	r31, 0x00	; 0
 708:	8b 81       	ldd	r24, Y+3	; 0x03
 70a:	88 2f       	mov	r24, r24
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	a0 e0       	ldi	r26, 0x00	; 0
 710:	b0 e0       	ldi	r27, 0x00	; 0
 712:	80 83       	st	Z, r24
 714:	91 83       	std	Z+1, r25	; 0x01
 716:	a2 83       	std	Z+2, r26	; 0x02
 718:	b3 83       	std	Z+3, r27	; 0x03
 71a:	0b c0       	rjmp	.+22     	; 0x732 <MCAL_Dio_WritePort+0xbc>
			break;
		case PORTD_ID:
			DIO_PORTD = Port_Value;
 71c:	e2 e3       	ldi	r30, 0x32	; 50
 71e:	f0 e0       	ldi	r31, 0x00	; 0
 720:	8b 81       	ldd	r24, Y+3	; 0x03
 722:	88 2f       	mov	r24, r24
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	a0 e0       	ldi	r26, 0x00	; 0
 728:	b0 e0       	ldi	r27, 0x00	; 0
 72a:	80 83       	st	Z, r24
 72c:	91 83       	std	Z+1, r25	; 0x01
 72e:	a2 83       	std	Z+2, r26	; 0x02
 730:	b3 83       	std	Z+3, r27	; 0x03
			break;
		}
	}
	return error;
 732:	89 81       	ldd	r24, Y+1	; 0x01
}
 734:	0f 90       	pop	r0
 736:	0f 90       	pop	r0
 738:	0f 90       	pop	r0
 73a:	0f 90       	pop	r0
 73c:	0f 90       	pop	r0
 73e:	cf 91       	pop	r28
 740:	df 91       	pop	r29
 742:	08 95       	ret

00000744 <MCAL_Dio_WritePin>:


Std_type MCAL_Dio_WritePin(E_DioPort Port_Num,E_DioPin Pin_Num,u8PinValue Pin_value)
{
 744:	df 93       	push	r29
 746:	cf 93       	push	r28
 748:	cd b7       	in	r28, 0x3d	; 61
 74a:	de b7       	in	r29, 0x3e	; 62
 74c:	28 97       	sbiw	r28, 0x08	; 8
 74e:	0f b6       	in	r0, 0x3f	; 63
 750:	f8 94       	cli
 752:	de bf       	out	0x3e, r29	; 62
 754:	0f be       	out	0x3f, r0	; 63
 756:	cd bf       	out	0x3d, r28	; 61
 758:	8c 83       	std	Y+4, r24	; 0x04
 75a:	6d 83       	std	Y+5, r22	; 0x05
 75c:	4e 83       	std	Y+6, r20	; 0x06
	Std_type error = OK;
 75e:	1b 82       	std	Y+3, r1	; 0x03
	u8RegisterValue Mask1,Mask2;
	if(DIO_STATUS_ERROR == NOT_OK)
	{
		error = NOT_OK;
	}
	else if(Port_Num >= DIO_CONFIGURED_PORTS)
 760:	8c 81       	ldd	r24, Y+4	; 0x04
 762:	84 30       	cpi	r24, 0x04	; 4
 764:	18 f0       	brcs	.+6      	; 0x76c <MCAL_Dio_WritePin+0x28>
	{

		error = NOT_OK;
 766:	81 e0       	ldi	r24, 0x01	; 1
 768:	8b 83       	std	Y+3, r24	; 0x03
 76a:	87 c0       	rjmp	.+270    	; 0x87a <__stack+0x1b>
	}
	else
	{

		Mask2 = ((Pin_Num) & (Pin_value));
 76c:	9d 81       	ldd	r25, Y+5	; 0x05
 76e:	8e 81       	ldd	r24, Y+6	; 0x06
 770:	89 23       	and	r24, r25
 772:	89 83       	std	Y+1, r24	; 0x01
		switch(Port_Num)
 774:	8c 81       	ldd	r24, Y+4	; 0x04
 776:	28 2f       	mov	r18, r24
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	38 87       	std	Y+8, r19	; 0x08
 77c:	2f 83       	std	Y+7, r18	; 0x07
 77e:	8f 81       	ldd	r24, Y+7	; 0x07
 780:	98 85       	ldd	r25, Y+8	; 0x08
 782:	81 30       	cpi	r24, 0x01	; 1
 784:	91 05       	cpc	r25, r1
 786:	79 f1       	breq	.+94     	; 0x7e6 <MCAL_Dio_WritePin+0xa2>
 788:	2f 81       	ldd	r18, Y+7	; 0x07
 78a:	38 85       	ldd	r19, Y+8	; 0x08
 78c:	22 30       	cpi	r18, 0x02	; 2
 78e:	31 05       	cpc	r19, r1
 790:	2c f4       	brge	.+10     	; 0x79c <MCAL_Dio_WritePin+0x58>
 792:	8f 81       	ldd	r24, Y+7	; 0x07
 794:	98 85       	ldd	r25, Y+8	; 0x08
 796:	00 97       	sbiw	r24, 0x00	; 0
 798:	69 f0       	breq	.+26     	; 0x7b4 <MCAL_Dio_WritePin+0x70>
 79a:	6f c0       	rjmp	.+222    	; 0x87a <__stack+0x1b>
 79c:	2f 81       	ldd	r18, Y+7	; 0x07
 79e:	38 85       	ldd	r19, Y+8	; 0x08
 7a0:	22 30       	cpi	r18, 0x02	; 2
 7a2:	31 05       	cpc	r19, r1
 7a4:	c9 f1       	breq	.+114    	; 0x818 <MCAL_Dio_WritePin+0xd4>
 7a6:	8f 81       	ldd	r24, Y+7	; 0x07
 7a8:	98 85       	ldd	r25, Y+8	; 0x08
 7aa:	83 30       	cpi	r24, 0x03	; 3
 7ac:	91 05       	cpc	r25, r1
 7ae:	09 f4       	brne	.+2      	; 0x7b2 <MCAL_Dio_WritePin+0x6e>
 7b0:	4c c0       	rjmp	.+152    	; 0x84a <MCAL_Dio_WritePin+0x106>
 7b2:	63 c0       	rjmp	.+198    	; 0x87a <__stack+0x1b>
		{
		case PORTA_ID:
			Mask1 = ((DIO_PORTA) & (~(Pin_Num)));
 7b4:	eb e3       	ldi	r30, 0x3B	; 59
 7b6:	f0 e0       	ldi	r31, 0x00	; 0
 7b8:	80 81       	ld	r24, Z
 7ba:	91 81       	ldd	r25, Z+1	; 0x01
 7bc:	a2 81       	ldd	r26, Z+2	; 0x02
 7be:	b3 81       	ldd	r27, Z+3	; 0x03
 7c0:	98 2f       	mov	r25, r24
 7c2:	8d 81       	ldd	r24, Y+5	; 0x05
 7c4:	80 95       	com	r24
 7c6:	89 23       	and	r24, r25
 7c8:	8a 83       	std	Y+2, r24	; 0x02
			DIO_DDRA = Mask1 | Mask2;
 7ca:	ea e3       	ldi	r30, 0x3A	; 58
 7cc:	f0 e0       	ldi	r31, 0x00	; 0
 7ce:	9a 81       	ldd	r25, Y+2	; 0x02
 7d0:	89 81       	ldd	r24, Y+1	; 0x01
 7d2:	89 2b       	or	r24, r25
 7d4:	88 2f       	mov	r24, r24
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	a0 e0       	ldi	r26, 0x00	; 0
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	80 83       	st	Z, r24
 7de:	91 83       	std	Z+1, r25	; 0x01
 7e0:	a2 83       	std	Z+2, r26	; 0x02
 7e2:	b3 83       	std	Z+3, r27	; 0x03
 7e4:	4a c0       	rjmp	.+148    	; 0x87a <__stack+0x1b>
			break;
		case PORTB_ID:
			Mask1 = ((DIO_PORTB) & (~(Pin_Num)));
 7e6:	e8 e3       	ldi	r30, 0x38	; 56
 7e8:	f0 e0       	ldi	r31, 0x00	; 0
 7ea:	80 81       	ld	r24, Z
 7ec:	91 81       	ldd	r25, Z+1	; 0x01
 7ee:	a2 81       	ldd	r26, Z+2	; 0x02
 7f0:	b3 81       	ldd	r27, Z+3	; 0x03
 7f2:	98 2f       	mov	r25, r24
 7f4:	8d 81       	ldd	r24, Y+5	; 0x05
 7f6:	80 95       	com	r24
 7f8:	89 23       	and	r24, r25
 7fa:	8a 83       	std	Y+2, r24	; 0x02
			DIO_PORTB = Mask1 | Mask2;
 7fc:	e8 e3       	ldi	r30, 0x38	; 56
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	9a 81       	ldd	r25, Y+2	; 0x02
 802:	89 81       	ldd	r24, Y+1	; 0x01
 804:	89 2b       	or	r24, r25
 806:	88 2f       	mov	r24, r24
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	a0 e0       	ldi	r26, 0x00	; 0
 80c:	b0 e0       	ldi	r27, 0x00	; 0
 80e:	80 83       	st	Z, r24
 810:	91 83       	std	Z+1, r25	; 0x01
 812:	a2 83       	std	Z+2, r26	; 0x02
 814:	b3 83       	std	Z+3, r27	; 0x03
 816:	31 c0       	rjmp	.+98     	; 0x87a <__stack+0x1b>
			break;
		case PORTC_ID:
			Mask1 = ((DIO_PORTC) & (~(Pin_Num)));
 818:	e5 e3       	ldi	r30, 0x35	; 53
 81a:	f0 e0       	ldi	r31, 0x00	; 0
 81c:	80 81       	ld	r24, Z
 81e:	91 81       	ldd	r25, Z+1	; 0x01
 820:	a2 81       	ldd	r26, Z+2	; 0x02
 822:	b3 81       	ldd	r27, Z+3	; 0x03
 824:	98 2f       	mov	r25, r24
 826:	8d 81       	ldd	r24, Y+5	; 0x05
 828:	80 95       	com	r24
 82a:	89 23       	and	r24, r25
 82c:	8a 83       	std	Y+2, r24	; 0x02
			DIO_PORTC = Mask1 | Mask2;
 82e:	e5 e3       	ldi	r30, 0x35	; 53
 830:	f0 e0       	ldi	r31, 0x00	; 0
 832:	9a 81       	ldd	r25, Y+2	; 0x02
 834:	89 81       	ldd	r24, Y+1	; 0x01
 836:	89 2b       	or	r24, r25
 838:	88 2f       	mov	r24, r24
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	a0 e0       	ldi	r26, 0x00	; 0
 83e:	b0 e0       	ldi	r27, 0x00	; 0
 840:	80 83       	st	Z, r24
 842:	91 83       	std	Z+1, r25	; 0x01
 844:	a2 83       	std	Z+2, r26	; 0x02
 846:	b3 83       	std	Z+3, r27	; 0x03
 848:	18 c0       	rjmp	.+48     	; 0x87a <__stack+0x1b>
			break;
		case PORTD_ID:
			Mask1 = ((DIO_PORTD) & (~(Pin_Num)));
 84a:	e2 e3       	ldi	r30, 0x32	; 50
 84c:	f0 e0       	ldi	r31, 0x00	; 0
 84e:	80 81       	ld	r24, Z
 850:	91 81       	ldd	r25, Z+1	; 0x01
 852:	a2 81       	ldd	r26, Z+2	; 0x02
 854:	b3 81       	ldd	r27, Z+3	; 0x03
 856:	98 2f       	mov	r25, r24
 858:	8d 81       	ldd	r24, Y+5	; 0x05
 85a:	80 95       	com	r24
 85c:	89 23       	and	r24, r25
 85e:	8a 83       	std	Y+2, r24	; 0x02
			DIO_PORTD = Mask1 | Mask2;
 860:	e2 e3       	ldi	r30, 0x32	; 50
 862:	f0 e0       	ldi	r31, 0x00	; 0
 864:	9a 81       	ldd	r25, Y+2	; 0x02
 866:	89 81       	ldd	r24, Y+1	; 0x01
 868:	89 2b       	or	r24, r25
 86a:	88 2f       	mov	r24, r24
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	a0 e0       	ldi	r26, 0x00	; 0
 870:	b0 e0       	ldi	r27, 0x00	; 0
 872:	80 83       	st	Z, r24
 874:	91 83       	std	Z+1, r25	; 0x01
 876:	a2 83       	std	Z+2, r26	; 0x02
 878:	b3 83       	std	Z+3, r27	; 0x03
			break;

		}
	}
	return error;
 87a:	8b 81       	ldd	r24, Y+3	; 0x03
}
 87c:	28 96       	adiw	r28, 0x08	; 8
 87e:	0f b6       	in	r0, 0x3f	; 63
 880:	f8 94       	cli
 882:	de bf       	out	0x3e, r29	; 62
 884:	0f be       	out	0x3f, r0	; 63
 886:	cd bf       	out	0x3d, r28	; 61
 888:	cf 91       	pop	r28
 88a:	df 91       	pop	r29
 88c:	08 95       	ret

0000088e <main>:
#include "DIO_interface.h"



int main()
{
 88e:	df 93       	push	r29
 890:	cf 93       	push	r28
 892:	cd b7       	in	r28, 0x3d	; 61
 894:	de b7       	in	r29, 0x3e	; 62
 896:	6c 97       	sbiw	r28, 0x1c	; 28
 898:	0f b6       	in	r0, 0x3f	; 63
 89a:	f8 94       	cli
 89c:	de bf       	out	0x3e, r29	; 62
 89e:	0f be       	out	0x3f, r0	; 63
 8a0:	cd bf       	out	0x3d, r28	; 61
	S_Dio s1;




	S_Dio P1={PORTC_ID,PIN1_ID,OUTPUT};
 8a2:	ce 01       	movw	r24, r28
 8a4:	05 96       	adiw	r24, 0x05	; 5
 8a6:	9f 87       	std	Y+15, r25	; 0x0f
 8a8:	8e 87       	std	Y+14, r24	; 0x0e
 8aa:	e6 e6       	ldi	r30, 0x66	; 102
 8ac:	f0 e0       	ldi	r31, 0x00	; 0
 8ae:	f9 8b       	std	Y+17, r31	; 0x11
 8b0:	e8 8b       	std	Y+16, r30	; 0x10
 8b2:	f3 e0       	ldi	r31, 0x03	; 3
 8b4:	fa 8b       	std	Y+18, r31	; 0x12
 8b6:	e8 89       	ldd	r30, Y+16	; 0x10
 8b8:	f9 89       	ldd	r31, Y+17	; 0x11
 8ba:	00 80       	ld	r0, Z
 8bc:	88 89       	ldd	r24, Y+16	; 0x10
 8be:	99 89       	ldd	r25, Y+17	; 0x11
 8c0:	01 96       	adiw	r24, 0x01	; 1
 8c2:	99 8b       	std	Y+17, r25	; 0x11
 8c4:	88 8b       	std	Y+16, r24	; 0x10
 8c6:	ee 85       	ldd	r30, Y+14	; 0x0e
 8c8:	ff 85       	ldd	r31, Y+15	; 0x0f
 8ca:	00 82       	st	Z, r0
 8cc:	8e 85       	ldd	r24, Y+14	; 0x0e
 8ce:	9f 85       	ldd	r25, Y+15	; 0x0f
 8d0:	01 96       	adiw	r24, 0x01	; 1
 8d2:	9f 87       	std	Y+15, r25	; 0x0f
 8d4:	8e 87       	std	Y+14, r24	; 0x0e
 8d6:	9a 89       	ldd	r25, Y+18	; 0x12
 8d8:	91 50       	subi	r25, 0x01	; 1
 8da:	9a 8b       	std	Y+18, r25	; 0x12
 8dc:	ea 89       	ldd	r30, Y+18	; 0x12
 8de:	ee 23       	and	r30, r30
 8e0:	51 f7       	brne	.-44     	; 0x8b6 <main+0x28>

	S_Dio p2={PORTD_ID,(PIN3_ID | PIN2_ID | PIN6_ID),OUTPUT};
 8e2:	ce 01       	movw	r24, r28
 8e4:	08 96       	adiw	r24, 0x08	; 8
 8e6:	9c 8b       	std	Y+20, r25	; 0x14
 8e8:	8b 8b       	std	Y+19, r24	; 0x13
 8ea:	e3 e6       	ldi	r30, 0x63	; 99
 8ec:	f0 e0       	ldi	r31, 0x00	; 0
 8ee:	fe 8b       	std	Y+22, r31	; 0x16
 8f0:	ed 8b       	std	Y+21, r30	; 0x15
 8f2:	f3 e0       	ldi	r31, 0x03	; 3
 8f4:	ff 8b       	std	Y+23, r31	; 0x17
 8f6:	ed 89       	ldd	r30, Y+21	; 0x15
 8f8:	fe 89       	ldd	r31, Y+22	; 0x16
 8fa:	00 80       	ld	r0, Z
 8fc:	8d 89       	ldd	r24, Y+21	; 0x15
 8fe:	9e 89       	ldd	r25, Y+22	; 0x16
 900:	01 96       	adiw	r24, 0x01	; 1
 902:	9e 8b       	std	Y+22, r25	; 0x16
 904:	8d 8b       	std	Y+21, r24	; 0x15
 906:	eb 89       	ldd	r30, Y+19	; 0x13
 908:	fc 89       	ldd	r31, Y+20	; 0x14
 90a:	00 82       	st	Z, r0
 90c:	8b 89       	ldd	r24, Y+19	; 0x13
 90e:	9c 89       	ldd	r25, Y+20	; 0x14
 910:	01 96       	adiw	r24, 0x01	; 1
 912:	9c 8b       	std	Y+20, r25	; 0x14
 914:	8b 8b       	std	Y+19, r24	; 0x13
 916:	9f 89       	ldd	r25, Y+23	; 0x17
 918:	91 50       	subi	r25, 0x01	; 1
 91a:	9f 8b       	std	Y+23, r25	; 0x17
 91c:	ef 89       	ldd	r30, Y+23	; 0x17
 91e:	ee 23       	and	r30, r30
 920:	51 f7       	brne	.-44     	; 0x8f6 <main+0x68>
	S_Dio p3={PORTB_ID,PIN5_ID| PIN7_ID,OUTPUT};
 922:	ce 01       	movw	r24, r28
 924:	0b 96       	adiw	r24, 0x0b	; 11
 926:	99 8f       	std	Y+25, r25	; 0x19
 928:	88 8f       	std	Y+24, r24	; 0x18
 92a:	e0 e6       	ldi	r30, 0x60	; 96
 92c:	f0 e0       	ldi	r31, 0x00	; 0
 92e:	fb 8f       	std	Y+27, r31	; 0x1b
 930:	ea 8f       	std	Y+26, r30	; 0x1a
 932:	f3 e0       	ldi	r31, 0x03	; 3
 934:	fc 8f       	std	Y+28, r31	; 0x1c
 936:	ea 8d       	ldd	r30, Y+26	; 0x1a
 938:	fb 8d       	ldd	r31, Y+27	; 0x1b
 93a:	00 80       	ld	r0, Z
 93c:	8a 8d       	ldd	r24, Y+26	; 0x1a
 93e:	9b 8d       	ldd	r25, Y+27	; 0x1b
 940:	01 96       	adiw	r24, 0x01	; 1
 942:	9b 8f       	std	Y+27, r25	; 0x1b
 944:	8a 8f       	std	Y+26, r24	; 0x1a
 946:	e8 8d       	ldd	r30, Y+24	; 0x18
 948:	f9 8d       	ldd	r31, Y+25	; 0x19
 94a:	00 82       	st	Z, r0
 94c:	88 8d       	ldd	r24, Y+24	; 0x18
 94e:	99 8d       	ldd	r25, Y+25	; 0x19
 950:	01 96       	adiw	r24, 0x01	; 1
 952:	99 8f       	std	Y+25, r25	; 0x19
 954:	88 8f       	std	Y+24, r24	; 0x18
 956:	9c 8d       	ldd	r25, Y+28	; 0x1c
 958:	91 50       	subi	r25, 0x01	; 1
 95a:	9c 8f       	std	Y+28, r25	; 0x1c
 95c:	ec 8d       	ldd	r30, Y+28	; 0x1c
 95e:	ee 23       	and	r30, r30
 960:	51 f7       	brne	.-44     	; 0x936 <main+0xa8>
	//x = 0xFF;
	//Dio_SetPortDirection(&P1);
	//Dio_ReadPort(PORTD_ID,x);
	//MCAL_Dio_Init(&p2);
	u8PinValue value;
	MCAL_Dio_SetPortDirection(&p2);
 962:	ce 01       	movw	r24, r28
 964:	08 96       	adiw	r24, 0x08	; 8
 966:	0e 94 f5 00 	call	0x1ea	; 0x1ea <MCAL_Dio_SetPortDirection>
	MCAL_Dio_WritePort(PORTD_ID,0x00);
 96a:	83 e0       	ldi	r24, 0x03	; 3
 96c:	60 e0       	ldi	r22, 0x00	; 0
 96e:	0e 94 3b 03 	call	0x676	; 0x676 <MCAL_Dio_WritePort>
	MCAL_Dio_WritePin(PORTD_ID,PIN6_ID,PORT_HIGH);
 972:	83 e0       	ldi	r24, 0x03	; 3
 974:	60 e4       	ldi	r22, 0x40	; 64
 976:	4f ef       	ldi	r20, 0xFF	; 255
 978:	0e 94 a2 03 	call	0x744	; 0x744 <MCAL_Dio_WritePin>
	MCAL_Dio_ReadPin(p2.port_num,6,value);
 97c:	88 85       	ldd	r24, Y+8	; 0x08
 97e:	66 e0       	ldi	r22, 0x06	; 6
 980:	49 81       	ldd	r20, Y+1	; 0x01
 982:	0e 94 78 02 	call	0x4f0	; 0x4f0 <MCAL_Dio_ReadPin>




	if(value == PIN_HIGH)
 986:	89 81       	ldd	r24, Y+1	; 0x01
 988:	8f 3f       	cpi	r24, 0xFF	; 255
 98a:	29 f4       	brne	.+10     	; 0x996 <main+0x108>
	{
		MCAL_Dio_SetPinDirection(&P1);
 98c:	ce 01       	movw	r24, r28
 98e:	05 96       	adiw	r24, 0x05	; 5
 990:	0e 94 6d 01 	call	0x2da	; 0x2da <MCAL_Dio_SetPinDirection>
 994:	04 c0       	rjmp	.+8      	; 0x99e <main+0x110>
	}
	else
	{

		MCAL_Dio_SetPinDirection(&p3);
 996:	ce 01       	movw	r24, r28
 998:	0b 96       	adiw	r24, 0x0b	; 11
 99a:	0e 94 6d 01 	call	0x2da	; 0x2da <MCAL_Dio_SetPinDirection>
 99e:	ff cf       	rjmp	.-2      	; 0x99e <main+0x110>

000009a0 <_exit>:
 9a0:	f8 94       	cli

000009a2 <__stop_program>:
 9a2:	ff cf       	rjmp	.-2      	; 0x9a2 <__stop_program>
